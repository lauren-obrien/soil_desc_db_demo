---
title: "New Zealand Soil Description Manual 2024 - Demonstration database"
author: "Lauren O'Brien"
date: "2024-12-05"
date-modified: "today"
format: html
editor: visual
---

## Background

This document takes the information in Appendix D of the NZ Soil Description Manual and implements a relational database using [DuckDB](https://duckdb.org/). The intent is to generate an interactive object to help developers understand how the data points in the manual are expected to be stored and used.

As with Appendix D, this implementation contains no user management, change tracking, or security features and so should not be used as-is. It also has no ability to store photographs, sample information or laboratory results.

## Setup

### Establish connection

We will be working in-memory:

```{r}
library(duckdb) # DBI is also required

# make an empty db in RAM, establish connection
con <- dbConnect(duckdb())

```

### Load extensions

We will be using DuckDB's spatial extension to represent point locations.

```{sql}
--| connection: con

INSTALL spatial;
LOAD spatial;

```

### Schemas

Keeping the data and metadata tables separate is Nice, but at present DuckDB does not support creating foreign keys across different schemas. This step will be skipped unless that functionality is implemented.

## Sites

After [Appendix D.3](https://manaakiwhenua.github.io/NZ_soildesc_2024/ap_03_database_design.html#sec-erd-siteover)

```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS site_purposes (
  id_site_purpose INTEGER PRIMARY KEY,
  catu_site_purpose VARCHAR UNIQUE,
  txt_site_purpose_name VARCHAR
  );
  
/* Table 10.1 */
INSERT INTO site_purposes VALUES
  (1, 'E', 'Mapping exploration'),
  (2, 'V', 'Mapping validation'),
  (3, 'R', 'Research'),
  (4, 'M', 'Monitoring'),
  (5, 'T', 'Reference'),
  (6, 'D', 'Development');

CREATE TABLE IF NOT EXISTS site_selection_methods (
  id_site_selection INTEGER PRIMARY KEY,
  catu_site_selection VARCHAR UNIQUE,
  txt_site_selection_name VARCHAR
  );

/* Table 10.2*/
INSERT INTO site_selection_methods VALUES
  (1, 'A', 'Arbitrary/opportunistic'),
  (2, 'D', 'Data-driven'),
  (3, 'M', 'Model-based'),
  (4, 'R', 'Random'),
  (5, 'T', 'Transect'),
  (6, 'G', 'Grid');

CREATE TABLE IF NOT EXISTS site_exposure_types (
  id_site_exposure INTEGER PRIMARY KEY,
  catu_site_exposure VARCHAR UNIQUE, 
  txt_site_exposure_name VARCHAR,
  txt_site_exposure_desc VARCHAR
  );
  
/* Table 10.3 */
INSERT INTO site_exposure_types VALUES
  (1, 'P1', 'Quick pit', 'Pit up to 0.5 m wide and generally no deeper than 1m'),
  (2, 'P2', 'Full pit', 'Pit or trench > 1 m wide, exposing the complete profile to regolith or bedrock'),
  (3, 'E', 'Exposure', 'Road cutting or similar, chipped back and cleaned'),
  (4, 'C1', 'Small core', 'Relatively undisturbed soil core, < 50 mm diameter'),
  (5, 'C2', 'Large core', 'Relatively undisturbed soil core, ≥ 50 mm diameter'),
  (6, 'A', 'Auger', 'Hand or mechanical auger, including e.g. post hole diggers');
  
CREATE TABLE IF NOT EXISTS site_early_stop_types (
  id_site_early_stop INTEGER PRIMARY KEY,
  catu_site_early_stop VARCHAR UNIQUE,
  txt_site_early_stop_name VARCHAR,
  txt_site_early_stop_desc VARCHAR
  );
  
/* Table 10.4 */
INSERT INTO site_early_stop_types VALUES
  (1, 'B', 'Bedrock', 'Underlying rock mass encountered, no more material to describe'),
  (2, 'R', 'Resistance', 'Material too difficult to extract with available equipment'),
  (3, 'C', 'Collapse', 'Excavation unstable or unsafe due to wetness or loose particle packing'),
  (4, 'I', 'Identified', 'The depth required to confirm a key parameter was reached'),
  (5, 'O', 'Other', 'Circumstances unrelated to the soil itself caused early stoppage');
  
CREATE TABLE IF NOT EXISTS current_weather (
  id_weather INTEGER PRIMARY KEY,
  catu_weather VARCHAR UNIQUE, 
  txt_weather_name VARCHAR
  );
  
/* Table 6.3.1 */
INSERT INTO current_weather VALUES
  (1, 'SU', 'Sunny'),
  (2, 'PC', 'Partly cloudy'),
  (3, 'OV', 'Overcast'),
  (4, 'RA', 'Rain'),
  (5, 'SL', 'Sleet'),
  (6, 'SN', 'Snow');

CREATE TABLE IF NOT EXISTS recent_rainfall (
  id_rainfall INTEGER PRIMARY KEY,
  cato_rainfall VARCHAR UNIQUE, 
  txt_rainfall_name VARCHAR 
  );

/* Table 6.3.2 */
INSERT INTO recent_rainfall VALUES 
  (1, 'NM', 'No rain in the last month'),
  (2, 'NW', 'No rain in the last week'),
  (3, 'ND', 'No rain in the last 24 hours'),
  (4, 'RD', 'Rain but no heavy rain in the last 24 hours'),
  (5, 'RH', 'Heavy rain for some days or excessive rain in the last 24 hours'),
  (6, 'RE', 'Extremely rainy or snow melting'),
  (7, 'UK', 'Unknown/uncertain');
  
```

```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS sites (
  id_site VARCHAR PRIMARY KEY,
  usr_author VARCHAR,  /* should be FK in a full implementation */
  dt_site TIMESTAMP, /* probably needs a 'future dates not allowed' check */ 
  catu_site_purpose VARCHAR REFERENCES site_purposes(catu_site_purpose),
  catu_site_selection VARCHAR REFERENCES site_selection_methods(catu_site_selection),
  catu_site_exposure VARCHAR REFERENCES site_exposure_types(catu_site_exposure),
  amt_site_depth_max_cm DECIMAL(5, 1) CHECK (amt_site_depth_max_cm BETWEEN 0 AND 1000),
  catu_early_stop VARCHAR REFERENCES site_early_stop_types(catu_site_early_stop),
  catu_site_weather VARCHAR REFERENCES current_weather(catu_weather),
  val_temperature_c DECIMAL(2, 1) CHECK (val_temperature_c BETWEEN -50 AND 50), 
  cato_site_rainfall VARCHAR REFERENCES recent_rainfall(cato_rainfall)
  );
  
```

### Site disturbances

```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS disturbance_types (
  id_disturbance INTEGER PRIMARY KEY,
  catu_disturbance VARCHAR UNIQUE,
  txt_disturbance_name VARCHAR
  );

/* Table 10.5 */
INSERT INTO disturbance_types VALUES
  (1,  'MC', 'Mechanical disturbance (e.g. tillage, deep ripping, subsoiling)'),
  (2,  'AN', 'Animal disturbance (e.g. pugging, rooting, tunnelling, excretion)'),
  (3,  'CL', 'Complete vegetation clearance (e.g. clearfelling)'),
  (4,  'CO', 'Selective vegetation clearance (e.g. tree removal or weed clearance)'),
  (5,  'WI', 'Wind-induced treefall'),
  (6,  'SL', 'Erosion event - material lost from site'),
  (7,  'SD', 'Deposition event - material added to site'),
  (8,  'FC', 'Fire - controlled burn'),
  (9,  'FW', 'Fire - uncontrolled burn'),
  (10, 'FL', 'Flooding - freshwater'),
  (11, 'FS', 'Flooding - saline water (e.g. storm surge event)'),
  (12, 'PO', 'Pollution event (e.g. petrol spill)'),
  (13, 'NO', 'Fire - uncontrolled burn'),
  (14, 'UK', 'Unknown');  
  

CREATE TABLE IF NOT EXISTS disturbance_ages (
  id_disturbance_age INTEGER PRIMARY KEY,
  catu_disturbance_age VARCHAR UNIQUE, 
  txt_disturbance_age_name VARCHAR
  );
  
/* Table 10.6 */
INSERT INTO disturbance_ages VALUES 
  (1,  'D', 'Within the past day'),
  (2,  'W', 'Within the past week'),
  (3,  'M', 'Within the past month'),
  (4,  'S', 'Within the past 6 months'),
  (5,  'Y', 'Within the past year');
```


```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS disturbances (
  id_site VARCHAR REFERENCES sites(id_site),
  id_disturbance INTEGER,
  PRIMARY KEY (id_site, id_disturbance),
  catu_disturbance VARCHAR REFERENCES disturbance_types(catu_disturbance),
  catu_disturbance_age VARCHAR REFERENCES disturbance_ages(catu_disturbance_age),
  amt_disturbance_age_days INTEGER CHECK (amt_disturbance_age_days >= 0)
  );

```

## Setting

From [Appendix D.2](https://manaakiwhenua.github.io/NZ_soildesc_2024/ap_03_database_design.html#sec-erd-setting)

### Locations

```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS elevation_measurement_methods (
  id_elevation_method INTEGER PRIMARY KEY,
  catu_elevation_method VARCHAR UNIQUE,
  txt_elevation_method_name VARCHAR
  );
  
/* Table 3.1 */
INSERT INTO elevation_measurement_methods VALUES  
  (1, 'E', 'Estimate'),
  (2, 'A', 'Measured by a calibrated altimeter'),
  (3, 'M', 'Interpolated from contour map with interval of ≤ 20 m, or extracted from similar-quality Digital Elevation Model (DEM)'),
  (4, 'G', 'Measured using a GNSS system with an adequate 3D fix'),
  (5, 'D', 'Extracted from high-accuracy DEM (Lidar or similar)');
  
CREATE TABLE IF NOT EXISTS gnss_types (
  id_gnss INTEGER PRIMARY KEY,
  catu_gnss VARCHAR UNIQUE,
  txt_gnss_name VARCHAR,
  txt_gnss_desc VARCHAR
  );

/* Table 3.1 */
INSERT INTO gnss_types VALUES  
  (1, 'GS', 'Single-band GNSS',  'Satellite based location, single band'),
  (2, 'GM',	'Multi-band GNSS',   'Satellite based location, multiple band'),
  (3, 'GR', 'Differential GNSS', 'Satellite based location, on-ground correction'),
  (4, 'LM', 'Multi-sensor',      'Combined GNSS and other location data'),
  (5, 'NO', 'None',              'Location determined manually.');

```


```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS locations (
  id_site VARCHAR REFERENCES sites(id_site) PRIMARY KEY,
  /* NB can't yet enforce projection or geom type */
  geo_point_site_xy GEOMETRY NOT NULL,  
  amt_elevation_abs_m DECIMAL(6, 2) CHECK (amt_elevation_abs_m BETWEEN -5 AND 3724),
  amt_error_location_m DECIMAL(6, 2) CHECK (amt_error_location_m >= 0),
  catu_elevation_method VARCHAR REFERENCES elevation_measurement_methods(catu_elevation_method),
  catu_gnss VARCHAR REFERENCES gnss_types(catu_gnss),
  amt_elevation_rel_m DECIMAL(6, 2) CHECK (amt_elevation_rel_m BETWEEN -5 AND 3724), 
  txt_notes_triangulation VARCHAR,
  txt_location_desc VARCHAR,
  catu_admin_rc VARCHAR, /* REFERENCES regional_councils(catu_rc) */
  catu_admin_dc VARCHAR /* REFERENCES regional_councils(catu_dc) */
  );

```

### Landscape

```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS provinces (
  id_province INTEGER PRIMARY KEY,
  catu_province VARCHAR UNIQUE,
  txt_province_name VARCHAR
  /* txt_province_desc VARCHAR */ 
  );
  
/* Table 4.1 */
INSERT INTO provinces VALUES  
  (1, 'NN', 'Northland'),
  (2, 'NL', 'Northern Lowlands'),
  (3, 'NW', 'North-western sedimentary hills'),
  (4, 'NV', 'Central Volcanic Zone'),
  (5, 'NT', 'Stratovolcanoes and ringplains'),
  (6, 'NI', 'North Island Axial Mountains'),
  (7, 'NS', 'Southern and Eastern Sedimentary Hills'),
  (8, 'NM', 'Marine Terraces, Plains and Dunelands'),
  (9, 'NA', 'Accretionary wedge and old sedimentary hills'),
  (10, 'NC', 'Chatham Islands'),
  (11, 'SI', 'South Island axial mountains'),
  (12, 'SR', 'Front Ranges and inland basins'),
  (13, 'SO', 'Otago basin and range'),
  (14, 'SF', 'Fiordland'),
  (15, 'SW', 'West coast piedmont, hills and mountains'),
  (16, 'SN', 'Northwest Nelson'),
  (17, 'SS', 'North Bank and the Marlborough Sounds'),
  (18, 'SM', 'Marlborough Mountains'),
  (19, 'SP', 'East Coast Peninsulas'),
  (20, 'SE', 'East Coast Plains and Downs'),
  (21, 'SL', 'Southland mountains, hills and plains'),
  (22, 'ST', 'Stewart Island');
  
CREATE TABLE IF NOT EXISTS landscapes (
  id_landscape INTEGER PRIMARY KEY,
  catu_landscape VARCHAR UNIQUE,
  txt_landscape_name VARCHAR,
  txt_landscape_desc VARCHAR 
  ); 

/* Table 4.2 */
INSERT INTO landscapes VALUES  
  (1, 'Mt', 'Mountains', 'Steep to very steep, high relief (>300 m), fixed and well connected stream channels, often deep'),
  (2, 'Hi', 'Hills', 'Gentle to very steep, moderately high to high relief (90-300 m), fixed and well connected stream channels, shallow to deep'),
  (3, 'Up', 'Uplands', 'Gentle to very steep, low relief (30-90 m) but relatively high elevation, fixed and well connected stream channels, shallow valleys and plateaus, located among hills and mountains'),
  (4, 'Ll', 'Lowlands', 'Gentle to very steep, low relief (30-90 m) and elevation, fixed and well connected stream channels, shallow to deep'),
  (5, 'Te', 'Terraces', 'Former plains, uplifted and sometimes covered by loess. Flat to gently undulating upper surfaces bounded by distinctive drop-offs on their downhill end, often backing on to lowlands, hills or mountains at their uphill end.'),
  (6, 'Pl', 'Plains', 'Level to very gentle surfaces created by fluvial and/or airfall tephra deposition.'),
  (7, 'Sc', 'Sand country', 'Extensive dune and sandplain areas. Low relief and elevation, gentle to steep slopes, and active stream channels, often with interrupted connectivity'),
  (8, 'Cs', 'Coast', 'On- and near-shore features created by the interaction of the ocean with the land, including beaches, deltas, lagoons and estuaries');

```

```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS landscape (
  id_site VARCHAR,
  FOREIGN KEY (id_site) REFERENCES sites(id_site),
  id_landscape INTEGER,
  PRIMARY KEY (id_site, id_landscape),
  catu_province VARCHAR REFERENCES provinces(catu_province),
  catu_landscape VARCHAR REFERENCES landscapes(catu_landscape),
  amt_lscape_relief_med_m DECIMAL(6, 2) CHECK (amt_lscape_relief_med_m >= 0),
  amt_lscape_slope_med_m DECIMAL(6, 2) CHECK (amt_lscape_slope_med_m >= 0),
  amt_lscape_slope_min_m DECIMAL(6, 2) CHECK (amt_lscape_slope_min_m >= 0),
  amt_lscape_slope_max_m DECIMAL(6, 2) CHECK (amt_lscape_slope_max_m >= 0)
  );

```

### Landscape landuse

```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS landuse_primary (
  id_landuse_primary INTEGER PRIMARY KEY,
  catu_landuse_primary VARCHAR UNIQUE,
  txt_landuse_primary_name VARCHAR
  );
  
INSERT INTO landuse_primary VALUES  
  (1, '1', 'Conservation and minimal use of natural environments'),
  (2, '2', 'Production agriculture and plantations'),
  (3, '3', 'Built environment');
  
CREATE TABLE IF NOT EXISTS landuse_secondary (
  id_landuse_primary INTEGER,
  id_landuse_secondary INTEGER,
  PRIMARY KEY (id_landuse_primary, id_landuse_secondary),
  catu_landuse_secondary VARCHAR UNIQUE,
  txt_landuse_secondary_name VARCHAR
  );

INSERT INTO landuse_secondary VALUES  
  (1,  '1', '1.1.0', 'Biodiversity protection'),
  (2,  '1', '1.2.0', 'Cultural and natural heritage'),
  (3,  '1', '1.3.0', 'Minimal use from relatively natural environments'),
  (4,  '1', '1.4.0', 'Unused land and land in transition'),
  (5,  '2', '2.1.0', 'Plantation forests'),
  (6,  '2', '2.2.0', 'Grazing modified pasture systems'),
  (7,  '2', '2.3.0', 'Short-rotation and seasonal cropping'),
  (8,  '2', '2.4.0', 'Perennial horticulture'),
  (9,  '2', '2.5.0', 'Intensive horticulture'),
  (10, '2', '2.6.0', 'Intensive animal production'),
  (11, '2', '2.7.0', 'Water and wastewater'),
  (12, '2', '2.8.0', 'Land in transition'),
  (13, '3', '3.1.0', 'Residential'),
  (14, '3', '3.2.0', 'Public recreation and services'),
  (15, '3', '3.3.0', 'Commercial'),
  (16, '3', '3.4.0', 'Manufacturing and industrial'),
  (17, '3', '3.5.0', 'Utilities'),
  (18, '3', '3.6.0', 'Transport and communication'),
  (19, '3', '3.7.0', 'Mining'),
  (20, '3', '3.8.0', 'Waste treatment and disposal'),
  (21, '3', '3.9.0', 'Vacant and transitioning land');

```

```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS lscape_landuse (
  id_site VARCHAR,
  id_landscape INTEGER,
  FOREIGN KEY (id_site, id_landscape) REFERENCES landscape(id_site, id_landscape),
  id_lscape_landuse INTEGER,
  PRIMARY KEY (id_site, id_landscape, id_lscape_landuse),
  catu_lscape_landuse_primary VARCHAR REFERENCES landuse_primary(catu_landuse_primary),
  catu_lscape_landuse_secondary VARCHAR REFERENCES landuse_secondary(catu_landuse_secondary),
  amt_landuse_area_p DECIMAL(6, 2) CHECK (amt_landuse_area_p BETWEEN 0 AND 100)
  );

```

### Landform

```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS landform_types (
  id_landform INTEGER PRIMARY KEY,
  catu_landform VARCHAR UNIQUE,
  txt_landform_name VARCHAR,
  txt_landform_desc VARCHAR 
  );
  
/* Table 4.3 */
INSERT INTO landform_types VALUES  
  (1, 'Ba', 'Bar', 'A ridge-like accumulation of sand, gravel, or other alluvial material formed in the channels, along the banks, or at the mouth of a stream where a decrease in velocity induces deposition'),
  (2, 'Bc', 'Beach', 'Low-slope, shorefront accumulation of unconsolidated sediment (usually sand to cobble sized)'),
  (3, 'Bo', 'Bog', 'Rainfall-fed, peat-accumulating freshwater wetland with low pH and nutrient availability and restricted water flow'),
  (4, 'Ca', 'Caldera', 'Large hollow in the top of a volcano'),
  (5, 'Cl', 'Cliff', 'Steep to vertical slope with more than 10 m local relief'), 
  (6, 'Cn', 'Cone',  'Moderate to steep, usually isolated hill built up by volcanic activity'), 
  (7, 'Cr', 'Crest', 'A locally high area, from which the surface slopes downwards in opposite directions'),
  (8, 'Dl', 'Delta', 'A fan-shaped accumulation of alluvial sediment, usually with several water channels, at a river or stream mouth.'),
  (9, 'Du', 'Dune', 'Accumulation of windblown sand into an elongated ridge or crescent shape'),
  (10, 'Ew', 'Ephemeral wetland', 'Wetland subject to pronounced seasonal drying. Non-peaty, with neutral pH and moderate nutrient status. Usually in a closed depression'),
  (11, 'Fl', 'Flat', 'Level area created by deposition'),
  (12, 'Fn', 'Fan', 'Gently sloping, flat to convex depositional slope, often at the foot of a steeper area and built up by a stream or by colluvial action'),
  (13, 'Fe', 'Fen', 'Rainfall and groundwater-fed peaty freshwater wetland with low to moderate pH and nutrient availability, and slightly fluctuating water table'),
  (14, 'Go', 'Gorge', 'A valley 10 m or more deep with over three-quarters of its sides sloping at more than 25°, and half or more of its sides formed by cliffs, and less than 5 times as wide as it is deep over half or more of its length, and everywhere less than 10 times as wide as it is deep'), 
  (15, 'Lv', 'Levee', 'An embankment of flood alluvium built up alongside a river and typically with lower-lying land behind'),
  (16, 'Ma', 'Marsh', 'Wetlands with large periodic water table fluctuations, relatively high pH and nutrient content, and mainly mineral substrate'),
  (17, 'Mh', 'Hummocky moraine', 'Low, roughly undulating deposits of glacial till'),
  (18, 'Mo', 'Mound', 'A small hill with moderate to steep sides, often somewhat isolated'),
  (19, 'Mr', 'Moraine ridge', 'Low ridges comprising glacial till'), 
  (20, 'Pk', 'Pakihi and gumland', 'Wetland in highly leached soils with low pH and nutrient availability. Sometimes periodically dry and usually without peat'),
  (21, 'Pl', 'Plain', 'Level to gently undulating area built up by alluvial, aeolian, or volcanic deposition'),
  (22, 'Pt', 'Plateau', 'Any comparatively flat extensive and elevated area, often dissected and with a steep dropoff on at least one side'),
  (23, 'Ri', 'Riser', 'The vertical or steeply sloping surface of one of a series of natural, step-like landforms, as those of a glacial stairway or of successive stream terraces'),
  (24, 'Rt', 'Tread', 'The flat or gently sloping broadly planar surface of one of a series of natural step-like landforms, as those of a glacial stairway or of successive stream terraces'),
  (25, 'Sa', 'Saddle', 'A low point (dip) along a ridge or the lowest point between two adjacent elevated areas. In one axis along the ridge or between the elevated areas the land slopes up in both directions and in the other axis, typically at right angles to the first, the land slopes down in both directions'), 
  (26, 'Se', 'Seepage', 'Sloped area carrying a slow but steady flow of groundwater'),
  (27, 'Sm', 'Swamp', 'Rainfall and groundwater-fed, somewhat peaty freshwater wetland with high pH and nutrient availability, and seasonally fluctuating water table'),
  (28, 'Sw', 'Swale', 'A low-lying depression between adjacent ridges'),
  (29, 'Sl', 'Slope', 'Very gentle to very steep inclined surfaces'), 
  (30, 'St', 'Saltmarsh', 'Wetlands with saline water supply, usually in tidally influenced areas'),
  (31, 'Vl', 'Valley-bottom', 'Open depression between parallel facing slopes'),
  (32, 'Cs', 'Cut-surface', 'Flat excavated by human activity'),
  (33, 'Cf', 'Cut-face', 'Slope excavated by human activity'),
  (34, 'Em', 'Embankment', 'Ridge or slope built up by human activity'),
  (35, 'Fi', 'Fill-top', 'Flat built up by human activity');

CREATE TABLE IF NOT EXISTS land_cover_types (
  id_land_cover INTEGER PRIMARY KEY,
  catu_land_cover VARCHAR UNIQUE,
  txt_land_cover_name VARCHAR,
  txt_land_cover_desc VARCHAR 
  );
  
/* Table 4.3 */
/* just doing the first 6 for demo purposes */
INSERT INTO land_cover_types VALUES  
  (1, '40', 'High producing Exotic Grassland', 'Exotic sward grassland of good pastoral quality and vigour reflecting relatively high soil fertility and intensive grazing management.'),
  (2, '41', 'Low Producing Grassland', 'Exotic sward grassland and indigenous short tussock grassland of poor pastoral quality reflecting lower soil fertility and extensive grazing management or non-agricultural use.'),
  (3, '43', 'Tall Tussock Grassland', 'Indigenous snow tussocks in mainly alpine mountain-lands and red tussock in the central North Island and locally in poorly-drained valley floors, terraces and basins of both islands.'),
  (4, '52', 'Mānuka and/or Kānuka', 'Scrub dominated by mānuka and/or kānuka.'),
  (5, '69', 'Indigenous Forest', 'Tall forest dominated by indigenous conifer, broadleaved or beech species.'),
  (6, '71', 'Exotic Forest', 'Planted or naturalised forest.'); 

CREATE TABLE IF NOT EXISTS measurement_types (
  id_mtype INTEGER PRIMARY KEY,
  catu_mtype VARCHAR UNIQUE,
  txt_mtype_name VARCHAR
  );

/* Table D.1.1 */
INSERT INTO measurement_types VALUES   
   (1, 'NM', 'Parameter was recorded normally'),
   (2, 'ND', 'Parameter could not be reliably determined or does not apply'),
   (3, 'NR', 'Parameter was not recorded');

/* Table 4.4 */
CREATE TABLE IF NOT EXISTS landform_elements (
  id_landform_element INTEGER PRIMARY KEY,
  catu_landform_element VARCHAR UNIQUE,
  txt_landform_element_name VARCHAR
  );

INSERT INTO landform_elements VALUES   
   (1, 'CR', 'Crest'),
   (2, 'RI', 'Ridge'),
   (3, 'SL', 'Slope'),
   (4, 'FL', 'Flat'),
   (5, 'DO', 'Open depression'),
   (6, 'DC', 'Closed depression');

/* Table 4.5 */
CREATE TABLE IF NOT EXISTS landform_element_vmods (
  id_landform_element_vmod INTEGER PRIMARY KEY,
  catu_landform_element_vmod VARCHAR UNIQUE,
  txt_landform_element_vmod_name VARCHAR,
  txt_landform_element_vmod_desc VARCHAR
  );

INSERT INTO landform_element_vmods VALUES   
   (1, 'X', 'Waxing', 'Element upslope is gentler, element downslope is steeper.'),
   (2, 'N', 'Waning', 'Element upslope is steeper, element downslope is gentler.'),
   (3, 'A', 'Maximal', 'Element upslope is gentler, element downslope is gentler.'),
   (4, 'I', 'Minimal', 'Element upslope is steeper, element downslope is steeper.');

/* Table 4.6 */
CREATE TABLE IF NOT EXISTS landform_element_hmods (
  id_landform_element_hmod INTEGER PRIMARY KEY,
  catu_landform_element_hmod VARCHAR UNIQUE,
  txt_landform_element_hmod_name VARCHAR,
  txt_landform_element_hmod_desc VARCHAR
  );

INSERT INTO landform_element_hmods VALUES   
   (1, 'L', 'Enclosed', 'Adjacent slope elements face towards each other'),
   (2, 'E', 'Exposed',  'Adjacent slope elements face away from each other'),
   (3, 'O', 'Open',     'Adjacent slope elements face the same direction');

```


```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS landform (
  id_site VARCHAR,
  id_landscape INTEGER,
  FOREIGN KEY (id_site, id_landscape) REFERENCES landscape(id_site, id_landscape),
  id_landform INTEGER,
  PRIMARY KEY (id_site, id_landscape, id_landform),
  /* basics: */
  catu_landform VARCHAR REFERENCES landform_types(catu_landform),
  amt_landform_p DECIMAL(6, 2) CHECK (amt_landform_p BETWEEN 0 AND 100),
  /* can only be true for one landform per site/landscape: */
  ind_landform_contains_site BOOLEAN,
  catu_land_cover VARCHAR REFERENCES land_cover_types(catu_land_cover),
  /* detailed optional stuff: */
  amt_landform_relief_m DECIMAL(6, 2) CHECK (amt_landform_relief_m >= 0),
  amt_landform_slope_med_d DECIMAL(6, 2) CHECK (amt_landform_slope_med_d BETWEEN 0 AND 90),
  amt_landform_slope_min_d DECIMAL(6, 2) CHECK (amt_landform_slope_min_d BETWEEN 0 AND 90),
  amt_landform_slope_max_d DECIMAL(6, 2) CHECK (amt_landform_slope_max_d BETWEEN 0 AND 90),
  val_landform_aspect_med_d DECIMAL(6, 2) CHECK (val_landform_aspect_med_d BETWEEN 0 AND 359),
  val_landform_aspect_min_d DECIMAL(6, 2) CHECK (val_landform_aspect_min_d BETWEEN 0 AND 359),
  val_landform_aspect_max_d DECIMAL(6, 2) CHECK (val_landform_aspect_max_d BETWEEN 0 AND 359),
  catu_landform_aspect_rec VARCHAR REFERENCES measurement_types(catu_mtype) NOT NULL DEFAULT 'NR',
  catu_landform_element VARCHAR REFERENCES landform_elements(catu_landform_element),
  catu_landform_element_vmod VARCHAR REFERENCES landform_element_vmods(catu_landform_element_vmod),
  catu_landform_element_hmod VARCHAR REFERENCES landform_element_hmods(catu_landform_element_hmod),
  /* extremely optional stuff: */
  amt_slope_length_m DECIMAL(6, 2) CHECK (amt_slope_length_m >= 0),
  amt_mesoscale_topo_index DECIMAL(6, 2) CHECK (amt_mesoscale_topo_index BETWEEN -90 AND 90),
  amt_terrain_shape_index DECIMAL(6, 2) CHECK (amt_terrain_shape_index BETWEEN -90 AND 90)
  );

```

### Landform landuse

```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS landuse_tertiary (
  id_landuse_secondary INTEGER,
  id_landuse_tertiary INTEGER,
  PRIMARY KEY (id_landuse_secondary, id_landuse_tertiary),
  catu_landuse_tertiary VARCHAR UNIQUE,
  txt_landuse_tertiary_name VARCHAR
  );

/* Fig 8.1 - just including one of each tertiary code for demo */
INSERT INTO landuse_tertiary VALUES  
  (1,  1,  '1.1.1', 'High degree of biodivserity protection'),
  (2,  2,  '1.2.1', 'Indigenous cultural heritage'),
  (3,  3,  '1.3.1', 'Surface water supply'),
  (4,  4,  '1.4.1', 'Unused land'),
  (5,  5,  '2.1.1', 'Exotic plantation forestry'),
  (6,  6,  '2.2.1', 'Dairy'),
  (7,  7,  '2.3.1', 'Arable cropping'),
  (8,  8,  '2.4.1', 'Tree crops'),
  (9,  9,  '2.5.1', 'Production nurseries'),
  (10, 10, '2.6.1', 'Animal containment'),
  (11, 11, '2.7.1', 'Stock water'),
  (12, 12, '2.8.1', 'Unused degraded land'),
  (13, 13, '3.1.1', 'High-density residential'),
  (14, 14, '3.2.1', 'Outdoor recreation'),
  (15, 15, '3.3.1', 'Retail'),
  (16, 16, '3.4.1', 'General purpose factory'),
  (17, 17, '3.5.1', 'Fuel powered electricity generation'),
  (18, 18, '3.6.1', 'Airports/aerodromes'),
  (19, 19, '3.7.1', 'Mines'),
  (20, 20, '3.8.1', 'Landfills'),
  (21, 21, '3.9.1', 'Vacant land');
  
/* Table 8.2 */
CREATE TABLE IF NOT EXISTS landuse_impacts (
  id_landuse_impact INTEGER PRIMARY KEY,
  catu_landuse_impact VARCHAR UNIQUE,
  txt_landuse_impact_name VARCHAR,
  txt_landuse_impact_desc VARCHAR
  );
  
INSERT INTO landuse_impacts VALUES  
  (1,  'N', 'None', 'The land use has not significantly impacted the soil profile'),
  (2,  'M', 'Indirect', 'The land use has impacted flows of energy/matter into/out of the profile but not physically disturbed it (e.g. by fertiliser application or drainage alteration)'),
  (3,  'E', 'Direct', 'The land use has caused physical disturbance to the soil profile (e.g. from tillage or excavation)');

```


```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS lform_landuse (
  id_site VARCHAR,
  id_landscape INTEGER,
  id_landform INTEGER,
  FOREIGN KEY (id_site, id_landscape, id_landform) REFERENCES landform(id_site, id_landscape, id_landform),
  id_lform_landuse INTEGER,
  PRIMARY KEY (id_site, id_landscape, id_landform, id_lform_landuse),
  catu_lform_landuse_primary VARCHAR REFERENCES landuse_primary(catu_landuse_primary),
  catu_lform_landuse_secondary VARCHAR REFERENCES landuse_secondary(catu_landuse_secondary),
  catu_lform_landuse_tertiary VARCHAR REFERENCES landuse_tertiary(catu_landuse_tertiary),
  amt_landuse_area_p DECIMAL(6, 2) CHECK (amt_landuse_area_p BETWEEN 0 AND 100),
  catu_landuse_impact VARCHAR REFERENCES landuse_impacts(catu_landuse_impact)
  );

```

## Surface

```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS slope_methods (
  id_slope_method INTEGER PRIMARY KEY,
  catu_slope_method VARCHAR UNIQUE,
  txt_slope_method_name VARCHAR,
  txt_slope_method_desc VARCHAR
  );
  
/* Table 11.1 */
INSERT INTO slope_methods VALUES  
  (1, 'E', 'Estimate',   'Estimated by eye'),
  (2, 'C', 'Clinometer', 'Handheld clinometer'),
  (3, 'T', 'Tripod',     'Survey-grade equipment mounted on a tripod'),
  (4, 'D', 'DEM',        'Calculated from a DEM with suitable resolution and vertical accuracy');

CREATE TABLE IF NOT EXISTS aspect_methods (
  id_aspect_method INTEGER PRIMARY KEY,
  catu_aspect_method VARCHAR UNIQUE,
  txt_aspect_method_name VARCHAR,
  txt_aspect_method_desc VARCHAR
  );
  
/* Table 11.2 */
INSERT INTO aspect_methods VALUES  
  (1, 'E', 'Estimate', 'Estimated by eye'),
  (2, 'C', 'Compass', 'Handheld magnestic compass'),
  (3, 'D', 'DEM', 'Calculated from a DEM with suitable resolution and vertical accuracy');

CREATE TABLE IF NOT EXISTS surface_water_types (
  id_surface_water INTEGER PRIMARY KEY,
  catu_surface_water VARCHAR UNIQUE,
  txt_surface_water_name VARCHAR,
  txt_surface_water_desc VARCHAR
  );
  
/* Table 11.4 */
INSERT INTO surface_water_types VALUES  
  (1, 'S', 'Seawater', 'Saline ocean or brackish tidal waters'),
  (2, 'I', 'Surface water', 'Waters flowing over the surface from further inland'),
  (3, 'G', 'Groundwater', 'Waters rising from adjacent springs or an elevated natural water table'),
  (4, 'R', 'Rainfall', 'Rain falling on or near the site and perching on the surface'),
  (5, 'A', 'Anthropic', 'Water from a manmade discharge location or backing up behind a dam');

CREATE TABLE IF NOT EXISTS surface_water_persts (
  id_surface_water_perst INTEGER PRIMARY KEY,
  catu_surface_water_perst VARCHAR UNIQUE,
  txt_surface_water_perst_name VARCHAR,
  txt_surface_water_perst_desc VARCHAR
  );
  
/* Table 11.5 */
INSERT INTO surface_water_persts VALUES  
  (1, 'P', 'Permanent', 'Surface water persists year-round'),
  (2, 'S', 'Seasonal', 'Surface water is present during wet seasons'),
  (3, 'T', 'Temporary', 'Surface water is present due to a specific event');
  
CREATE TABLE IF NOT EXISTS surface_crack_types (
  id_surface_crack INTEGER PRIMARY KEY,
  catu_surface_crack VARCHAR UNIQUE,
  txt_surface_crack_name VARCHAR,
  txt_surface_crack_desc VARCHAR
  );

/* Table 11.6 */
INSERT INTO surface_crack_types VALUES  
  (1, 'NO', 'None',         'No surface cracks'),
  (2, 'RT', 'Reversible',   'Cracks that open and close with changing soil moisture'),
  (3, 'IT', 'Irreversible', 'Cracks that persist year-round');

CREATE TABLE IF NOT EXISTS surface_crack_shapes (
  id_surface_crack_shp INTEGER PRIMARY KEY,
  catu_surface_crack_shp VARCHAR UNIQUE,
  txt_surface_crack_shp_name VARCHAR,
  txt_surface_crack_shp_desc VARCHAR
  );

/* Table 11.7 */
INSERT INTO surface_crack_shapes VALUES  
  (1, 'P', 'Polygonal', 'Surface cracks forming closed shapes on the land surface'),
  (2, 'L', 'Linear',    'Surface cracks running roughly parallel to each other'),
  (3, 'I', 'Irregular', 'Surface cracks with no discernible pattern');

CREATE TABLE IF NOT EXISTS site_microrelief_nat (
  id_microrelief_nat INTEGER PRIMARY KEY,
  catu_microrelief_nat VARCHAR UNIQUE,
  txt_microrelief_nat_name VARCHAR,
  txt_microrelief_nat_desc VARCHAR
  );

/* Table 11.8 */
INSERT INTO site_microrelief_nat VALUES  
  (1, 'N', 'None',   'Site surface is naturally smooth or level'),
  (2, 'G', 'Gilgai', 'Induced by shrink-swell clay activity'),
  (3, 'S', 'Swamp',  'Hummocky surfaces common in wetland areas, derived by biotic activity'),
  (4, 'K', 'Karst',  'Induced by subsurface collapse in limestone-dominated landscapes'),
  (5, 'A', 'Animal', 'Trampling or pugging induced by larger animals standing on low-slope ground (cows, pigs, ungulates)'),
  (6, 'T', 'Terracettes', 'Small terraces on moderate to steep slopes, generally induced by larger animals navigating the terrain'),
  (7, 'F', 'Frost', 'Induced by freeze-thaw activity');
  
CREATE TABLE IF NOT EXISTS site_microrelief_ant (
  id_microrelief_ant INTEGER PRIMARY KEY,
  catu_microrelief_ant VARCHAR UNIQUE,
  txt_microrelief_ant_name VARCHAR,
  txt_microrelief_ant_desc VARCHAR
  );
  
/* Table 11.9 */
INSERT INTO site_microrelief_ant VALUES  
  (1, 'N', 'None',   'Site surface is not significantly altered by humans'),
  (2, 'C', 'Smoothed', 'Site surface has been smoothed, contoured, rock-picked, infilled or levelled, beyond normal tillage effects'),
  (3, 'B', 'Raised Beds',  'Elevated areas have been created and maintained for specific crops, e.g. raised rows or puke for kūmara'),
  (4, 'R', 'Terraces and tracks',  'Hillsides have been cut/filled into terraces, or tracks cut in across the slope'),
  (5, 'D', 'Drained', 'Open drainage ditches have been installed');

CREATE TABLE IF NOT EXISTS water_depths (
  id_depth_water INTEGER PRIMARY KEY,
  catu_depth_water VARCHAR UNIQUE,
  txt_depth_water_name VARCHAR,
  txt_depth_water_desc VARCHAR
  );

/* Table 12.4 */
INSERT INTO water_depths VALUES  
  (1, 'NA', 'Not applicable',   'Water table not encountered'),
  (2, 'B', 'Below', 'Water table observed at or below the soil surface'),
  (3, 'A', 'Above',  'Water table observed above the soil surface');

CREATE TABLE IF NOT EXISTS luc_vegetation_codes (
  id_vegetation_luc INTEGER PRIMARY KEY,
  catu_vegetation_luc VARCHAR UNIQUE,
  txt_vegetation_luc_name VARCHAR,
  txt_vegetation_luc_desc VARCHAR
  );

/* Just grabbing a few from the full list for demo purposes */
INSERT INTO luc_vegetation_codes VALUES  
  (1, 'gI', 'Improved pasture', 'Sown legume-based pastures maintaining high levels of pasture production'),
  (2, 'cC', 'Cereal crops', 'Principally wheat, oats and barley, but also including ryecorn and millet'),
  (3, 'sM', 'Mānuka, Kānuka', 'Scrub and shrubland dominated by manuka (Leptospermum scoparium) or kanuka (Kunzea ericoides)'),
  (4, 'fC', 'Coastal forest',  'Forest confined to coastal habitats and characterised by broadleaved species'),
  (5, 'hW', 'Wetland vegetation', 'Herbaceous vegetation occurring in non-saline wetland habitats (swamps and bogs) in which the water table is at or near the surface for most of the year');

```
 
 
```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS site_surface (
  id_site VARCHAR,
  FOREIGN KEY (id_site) REFERENCES sites(id_site),
  PRIMARY KEY (id_site),
  amt_slope_d DECIMAL(6, 2) CHECK (amt_slope_d BETWEEN 0 AND 90),
  catu_slope_rec VARCHAR REFERENCES measurement_types(catu_mtype) NOT NULL DEFAULT 'NR',
  catu_slope_method VARCHAR REFERENCES slope_methods(catu_slope_method),
  amt_aspect_d DECIMAL(6, 2) CHECK (amt_slope_d BETWEEN 0 AND 359),
  catu_aspect_rec VARCHAR REFERENCES measurement_types(catu_mtype) NOT NULL DEFAULT 'NR',
  catu_aspect_method VARCHAR REFERENCES aspect_methods(catu_aspect_method),
  catu_surface_water VARCHAR REFERENCES surface_water_types(catu_surface_water),
  catu_surface_water_perst VARCHAR REFERENCES surface_water_persts(catu_surface_water_perst),
  catu_surface_cracks VARCHAR REFERENCES surface_crack_types(catu_surface_crack),
  catu_surface_crack_shp VARCHAR REFERENCES surface_crack_shapes(catu_surface_crack_shp),
  catu_microrelief_nat VARCHAR REFERENCES site_microrelief_nat(catu_microrelief_nat),
  amt_microrelief_nat_width_cm DECIMAL(6, 2) CHECK (amt_microrelief_nat_width_cm >= 0),
  amt_microrelief_nat_height_cm DECIMAL(6, 2) CHECK (amt_microrelief_nat_height_cm >= 0),
  catu_microrelief_ant VARCHAR REFERENCES site_microrelief_ant(catu_microrelief_ant),
  amt_microrelief_ant_width_cm DECIMAL(6, 2) CHECK (amt_microrelief_ant_width_cm >= 0),
  amt_microrelief_ant_height_cm DECIMAL(6, 2) CHECK (amt_microrelief_ant_height_cm >= 0),
  amt_depth_water DECIMAL(6, 2) CHECK (amt_depth_water >= 0),
  catu_depth_water VARCHAR REFERENCES water_depths(catu_depth_water),
  catu_vegetation_luc VARCHAR REFERENCES luc_vegetation_codes(catu_vegetation_luc)
  );

``` 
  
### Surface cover

```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS surface_cover_types (
  id_surface_cover INTEGER PRIMARY KEY,
  catu_surface_cover VARCHAR UNIQUE,
  txt_surface_cover_name VARCHAR,
  txt_surface_cover_desc VARCHAR
  );
  
/* Table 11.3 */
INSERT INTO surface_cover_types VALUES  
  (1, 'BE', 'Earth', 'Bare sediment or soil, < 2 mm'),
  (2, 'BR', 'Fragments', 'Small rock fragments, shells, or bones, 2 - 60 mm'),
  (3, 'BO', 'Rock', 'Bare rock outcrop or rock fragments > 60 mm'),
  (4, 'WT', 'Water', 'Open water, ice or snow'),
  (5, 'PT', 'Peat', 'Plant material decomposing under persistently saturated conditions'),
  (6, 'LI', 'Litter', 'Plant material decomposing under intermittently wet to dry conditions'),
  (7, 'GR', 'Small plants', 'Grasses, ferns, herbs, moss, sedges, annual crops'),
  (8, 'TR', 'Large plants', 'Shrubs, trees and treeferns, (stems and roots), perennial crops'),
  (9, 'SL', 'Sealed', 'Building, concrete, asphalt and similar');

```
  
```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS surface_cover (
  id_site VARCHAR,
  FOREIGN KEY (id_site) REFERENCES sites(id_site),
  PRIMARY KEY (id_site),
  catu_surface_cover VARCHAR REFERENCES surface_cover_types(catu_surface_cover),
  amt_surface_cover DECIMAL(6, 2) CHECK (amt_surface_cover BETWEEN 0 AND 100)
  );

```

### Erosion

```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS erosion_types (
  id_erosion INTEGER PRIMARY KEY,
  catu_erosion VARCHAR UNIQUE,
  txt_erosion_name VARCHAR,
  txt_erosion_desc VARCHAR
  );
  
/* Table 11.10 */
INSERT INTO erosion_types VALUES  
  (1, 'SH', 'Sheet', 'Thin layers of surface material are gradually removed more or less evenly from an extensive area of sloping land'),
  (2, 'RI', 'Rill', 'Formation of predominantly steep-sided erosion channel(s) ≤0.5 m deep.'),
  (3, 'GU', 'Gully', 'Formation of predominantly steep-sided erosion channel >0.5 m deep, not capable of being safely crossed by a wheeled tractor or obliterated by ploughing or deep cultivation'),
  (4, 'TN', 'Tunnel', 'Erosion by percolating water in a layer of subsoil, resulting in caving and the formation of narrow tunnels through which soluble or spheroidal soil material is removed.'),
  (5, 'CH', 'Channel', 'Erosion by water flowing in stream and river channels, including stream bank erosion'),
  (6, 'FA', 'Fall', 'A very rapid downward movement of a mass of rock or earth that travels mostly through the air by free fall, leaping, bounding or rolling, with little or no interaction between one moving unit and another, e.g., rock-fall, debris fall.'),
  (7, 'TO', 'Topple', 'Large blocks of earth material falling forward off very steep to precipitous slope'),
  (8, 'SL', 'Slide', 'Lateral displacement of earth materials moving as a block along a deep-seated slip face'),
  (9, 'SP', 'Spread', 'rapid displacement of wet, plastic materials that liquefy, often bringing along intact blocks or beds'),
  (10, 'FW', 'Flow', 'slow to rapid movement of earth materials that behave as a viscous fluid'),
  (11, 'WI', 'Wind', 'Detachment, transport, and deposition of loose materials by wind action, especially in dust storms and in arid or semi-arid regions or where a protective mat of vegetation has been removed. Erosion forms are characteristically ovate in plan, and concave in contour and profile.'),
  (12, 'UK', 'Unknown', 'Mode of erosion cannot be clearly determined'),
  (13, 'NR', 'Not recorded', 'Mode of erosion not recorded'),
  (14, 'NO', 'No erosion', 'No evidence of erosion');
  
CREATE TABLE IF NOT EXISTS erosion_severity (
  id_erosion_severity INTEGER PRIMARY KEY,
  catu_erosion_severity VARCHAR UNIQUE,
  txt_erosion_severity_name VARCHAR,
  txt_erosion_severity_desc VARCHAR
  );
  
/* Table 11.11 */
INSERT INTO erosion_severity VALUES  
  (1, 'S', 'Slight', 'Some evidence of damage to surface layers, original ecological functions largely intact'), 
  (2, 'M', 'Moderate', 'Clear evidence of removal of surface layers, original ecological functions partly destroyed'),
  (3, 'V', 'Severe', 'Surface layers completely removed and subsurface layers exposed, original ecological functions largely destroyed'),
  (4, 'E', 'Extreme', 'Substantial removal of deeper subsurface layers, original ecological functions fully destroyed');

CREATE TABLE IF NOT EXISTS erosion_activity (
  id_erosion_activity INTEGER PRIMARY KEY,
  catu_erosion_activity VARCHAR UNIQUE,
  txt_erosion_activity_name VARCHAR,
  txt_erosion_activity_desc VARCHAR
  );
  
/* Table 11.12 */
INSERT INTO erosion_activity VALUES  
  (1, 'PR', 'Active', 'Active at present'),
  (2, 'RE', 'Recent', 'Active within the past 100 years'),
  (3, 'HI', 'Historical', 'Active in historical times (>100 years ago)'),
  (4, 'UK', 'Unknown', 'Activity history cannot be reliably determined');
  
```
  
```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS site_erosion (
  id_site VARCHAR,
  FOREIGN KEY (id_site) REFERENCES sites(id_site),
  PRIMARY KEY (id_site),
  catu_erosion VARCHAR REFERENCES erosion_types(catu_erosion),
  cato_erosion_severity VARCHAR REFERENCES erosion_severity(catu_erosion_severity),
  cato_erosion_activity VARCHAR REFERENCES erosion_activity(catu_erosion_activity)
  );

```

### Deposition

```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS deposition_types (
  id_deposition INTEGER PRIMARY KEY,
  catu_deposition VARCHAR UNIQUE,
  txt_deposition_name VARCHAR,
  txt_deposition_desc VARCHAR
  );
  
/* Table 11.13 */
INSERT INTO deposition_types VALUES  
  (1,  'FL', 'Flood', 'Deposition driven by inundation events along streams'),
  (2,  'SS', 'Surge', 'Deposition driven by storm surge'),
  (3,  'TI', 'Till',  'Glacial deposition'),
  (4,  'FA', 'Fall', 'Rapid, freefall collapse of earth material on precipitous slopes'),
  (5,  'TO', 'Topple', 'Large blocks of earth material falling forward off very steep to precipitous slope'),
  (6,  'SL', 'Slide', 'Lateral displacement of earth materials moving as a block along a deep-seated slip face'),
  (7,  'SP', 'Spread', 'rapid displacement of wet, plastic materials that liquefy, often bringing along intact blocks or beds'),
  (8,  'FW', 'Flow', 'slow to rapid movement of earth materials that behave as a viscous fluid'),
  (9,  'VR', 'Volcanic eruption', 'Airfall deposition from pyroclastic eruptions'),
  (10, 'SA', 'Sand movement', 'Wind-driven deposition of sand from beaches, banks, or remobilised dunes'),
  (11, 'SI', 'Silt movement', 'Wind-driven deposition of silt and finer material from banks or bare earth'),
  (12, 'UK', 'Unknown', 'Mode of deposition cannot be clearly determined'),
  (13, 'NR', 'Not recorded', 'Mode of deposition not recorded'),
  (14, 'NO', 'No deposition', 'No evidence of deposition');
  
CREATE TABLE IF NOT EXISTS deposition_severity (
  id_deposition_severity INTEGER PRIMARY KEY,
  catu_deposition_severity VARCHAR UNIQUE,
  txt_deposition_severity_name VARCHAR,
  txt_deposition_severity_desc VARCHAR
  );
  
/* Table 11.14 */
INSERT INTO deposition_severity VALUES  
  (1, 'S', 'Slight', 'Patchy or thin cover over previous surface layers, original ecological functions largely intact'),
  (2, 'M', 'Moderate', 'Cover mostly complete but < 10cm thick, original ecological functions partly destroyed'),
  (3, 'V', 'Severe', 'Cover complete and > 10cm thick, original ecological functions largely destroyed'),
  (4, 'E', 'Extreme', 'Cover complete and permanent, original ecological functions fully destroyed');

CREATE TABLE IF NOT EXISTS deposition_activity (
  id_deposition_activity INTEGER PRIMARY KEY,
  catu_deposition_activity VARCHAR UNIQUE,
  txt_deposition_activity_name VARCHAR,
  txt_deposition_activity_desc VARCHAR
  );
  
/* Table 11.15 */
INSERT INTO deposition_activity VALUES  
  (1, 'FR', 'Fresh', 'Active within the past year'),
  (2, 'RE', 'Recent', 'Active within the past 10 years'),
  (3, 'HI', 'Historical', 'Active within the past 100 years'),
  (4, 'UK', 'Unknown', 'Activity history cannot be reliably determined');
  
```
  
```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS site_deposition (
  id_site VARCHAR,
  FOREIGN KEY (id_site) REFERENCES sites(id_site),
  PRIMARY KEY (id_site),
  catu_deposition VARCHAR REFERENCES deposition_types(catu_deposition),
  cato_deposition_severity VARCHAR REFERENCES deposition_severity(catu_deposition_severity),
  cato_deposition_activity VARCHAR REFERENCES deposition_activity(catu_deposition_activity)
  );

```

## Horizon overview

```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS boundary_shapes (
  id_boundary_shape INTEGER PRIMARY KEY,
  catu_boundary_shape VARCHAR UNIQUE,
  txt_boundary_shape_name VARCHAR,
  txt_boundary_shape_desc VARCHAR
  );
  
/* Table 12.1 */
INSERT INTO boundary_shapes VALUES  
  (1, 'S', 'Smooth', 'the boundary surface is a plane with few or no irregularities and usually occurs at the same depth across the profile face'), 
  (2, 'W', 'Wavy', 'the boundary surface has broad, shallow, relatively regular pockets and none deeper than they are wide'),
  (3, 'I', 'Irregular', 'the boundary surface has pockets which are deeper than they are wide but not recurved'),
  (4, 'C', 'Convolute', 'the boundary surface has pockets which are deeper than they are wide and, in parts, recurved'),
  (5, 'D', 'Discontinuous', 'the boundary is discontinuous, usually due to external disturbance');
  
CREATE TABLE IF NOT EXISTS boundary_widths (
  id_boundary_width INTEGER PRIMARY KEY,
  cato_boundary_width VARCHAR UNIQUE,
  txt_boundary_width_name VARCHAR,
  txt_boundary_width_desc VARCHAR
  );
  
/* Table 12.2 */
INSERT INTO boundary_widths VALUES
  (1, 'S', 'Sharp', '< 0.5 cm'),
  (2, 'A', 'Abrupt', '0.5 - 2.0 cm'),
  (3, 'C', 'Clear', '2.0 - 5.0 cm'),
  (4, 'G', 'Gradual', '5.0 - 10.0 cm'),
  (5, 'D', 'Diffuse', '10 - 30.0 cm'); 
  
CREATE TABLE IF NOT EXISTS soil_moistures (
  id_soil_moisture INTEGER PRIMARY KEY,
  cato_soil_moisture VARCHAR UNIQUE,
  txt_soil_moisture_name VARCHAR
  );  
  
/* Table 12.3 */
INSERT INTO soil_moistures VALUES  
  (1, 'D', 'Dry'),
  (2, 'T', 'Moderately moist'),
  (3, 'M', 'Moist'),
  (4, 'W', 'Wet'),
  (5, 'S', 'Saturated');
  
CREATE TABLE IF NOT EXISTS nzsc_pmo (
  id_pmo INTEGER PRIMARY KEY,
  catu_pmo VARCHAR UNIQUE,
  txt_pmo_name VARCHAR,
  txt_pmo_desc VARCHAR
  ); 

/* Table 24.5 */
INSERT INTO nzsc_pmo VALUES 
  (1, 'An', 'Anthropic', 'Deposits made by the direct actions of humans, including truncation, mixing, or deposition.'),
  (2, 'Cl', 'Colluvium', 'Weathered soil and rock material mantling slopes that has been transported primarily by gravity and sheet wash.'),
  (3, 'Fl', 'Alluvium', 'Sediments that have been deposited by streams, rivers and other running water.'),
  (4, 'Gl', 'Glacial till', 'Poorly stratified, poorly sorted rock fragments, sand and mud, surface or near-surface deposits resulting from the transportation by and deposition from ice or meltwater from beneath or in close proximity to glacial ice.'),
  (5, 'Lc', 'Lacustrine', 'Formed in and around lake beds; comprising extremely fine sediment deposited under very low-flow freshwater conditions.'),
  (6, 'Mr', 'Marine' , 'Unconsolidated sediments saturated by brackish or saline water.'),
  (7, 'Lh', 'Lahar', 'A flow of volcanic material, both ash and coarser products, mixed with water; often caused by the spilling over of a crater lake. Also used to describe the mounds formed on volcanic ring-plains where lahars stop.'),
  (8, 'Tp', 'Tephra', 'A general term for all solid (rather than molten) materials ejected from a volcano during an eruption: includes boulders, lapilli and ash.'),
  (9, 'Li', 'Litter', 'Partly or fully decomposed forest litter, equal to or greater than 30 cm depth that is **not** almost continually saturated in the natural state (**F** and **H** horizons).'),
  (10, 'Pt', 'Peat', 'Partly decomposed plant remains in a water-saturated environment, such as a bog'),
  (11, 'Lo', 'Loess', 'A blanket deposit of silt-sized particles (0.002--0.06 mm diameter); usually carried by wind from dry riverbeds or outwash plains during glacial and post-glacial periods.'),
  (12, 'Sa', 'Aeolian sand', 'Wind-deposited sand-sized particles (0.05--2.0 mm diameter), i.e. dune sand.'),
  (13, 'Rw', 'Highly Weathered Rock', 'Highly to completely weathered rock, formed in place by chemical weathering.'),
  (14, 'Rx', 'Rock', '*In situ* unweathered to moderately weathered lithified geologic material comprising one or more minerals showing rock structure.'),
  (15, 'Uk', 'Unknown', 'Origin cannot be determined with certainty.');

CREATE TABLE IF NOT EXISTS nzsc_pmo_mod (
  id_pmo_mod INTEGER PRIMARY KEY,
  catu_pmo_mod VARCHAR UNIQUE,
  txt_pmo_mod_name VARCHAR,
  txt_pmo_mod_desc VARCHAR
  ); 
  
/* Table 12.5 */
INSERT INTO nzsc_pmo_mod VALUES 
  (1, 'm', 'Māori', 'Soil modifications dating from Māori arrival in New Zealand, particularly pre-modern soil management practices'),
  (2, 'p', 'Pakeha', 'Soil modifications dating from Pakeha (non-Māori) arrival in New Zealand up to modern times (e.g. European agricultural practices)'),
  (3, 'n', 'Modern', 'Anthropic modifications resulting from modern techniques or addition of modern materials to the soil (e.g. plastics)');

CREATE TABLE IF NOT EXISTS weathering (
  id_weathering INTEGER PRIMARY KEY,
  cato_weathering VARCHAR UNIQUE,
  txt_weathering_name VARCHAR,
  txt_weathering_desc_rock VARCHAR,
  txt_weathering_desc_seds VARCHAR
  );

/* Table 12.6 */
INSERT INTO weathering VALUES 
  (1, '1', 'Unweathered', 'Material shows no discolouration, loss of strength, or any other effects due to weathering', 'Particles are uncoated and their physical arrangement has not been disturbed (e.g. visible cross-bedding, absence of burrows). Secondary minerals and precipitates are absent'),
  (2, '2', 'Slightly weathered', 'Material may be slightly discoloured. Discontinuities have discoloured surfaces. The rock material is not significantly weaker than fresh rock material', 'Particle physical arrangement is undisturbed, but some evidence of secondary mineral formation may be evident (e.g. pyrite formation in anoxic marine sediments)'),
  (3, '3', 'Moderately weathered', 'Rock material is discoloured and discontinuity surfaces will have a greater discolouration which also penetrates slightly into the rock material. The rock material is significantly weaker than the fresh rock and part of the rock mass may have been changed to soil material.', 'Sediments may be largely discoloured by secondary mineral precipitation or illuviation; some clay minerals may have weathered from the material, some physical disturbance by meso- or macrofauna may be apparent'),
  (4, '4', 'Highly weathered', 'Rock material is discoloured and more than half the rock mass is changed to soil material. Weathering adjacent to discontinuities penetrates deeply into the rock material but lithorelicts or core stones of fresh or slightly weathered rock may still be present.', 'Sediments show substantial alteration by weathering processes as evidenced by e.g. clay mineral production, presence of secondary materials and perhaps some structural development. Evidence of bedding may be absent or difficult to identify'),
  (5, '5', 'Very highly weathered', 'All the rock mass is decomposed and externally changed to soil material, but the original rock fabric is mainly preserved.', 'Sediments have largely changed to soil material, but the expression of features like structure may be weak relative to adjacent layers'),
  (6, '6', 'Completely weathered',  'Rock is completely changed to soil material with the original fabric completely destroyed but the resulting soil is not significantly transported.', 'Sediments have completely changed to soil material');

```
 
  
```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS horizon (
  id_site VARCHAR,
  FOREIGN KEY (id_site) REFERENCES sites(id_site),
  id_horizon INTEGER,
  PRIMARY KEY (id_site, id_horizon),
  amt_upper_depth_cm DECIMAL(6, 2) CHECK (amt_upper_depth_cm >= 0),
  amt_upper_depth_med_cm DECIMAL(6, 2) CHECK (amt_upper_depth_med_cm >= 0),
  amt_upper_depth_min_cm DECIMAL(6, 2) CHECK (amt_upper_depth_min_cm >= 0),
  amt_upper_depth_max_cm DECIMAL(6, 2) CHECK (amt_upper_depth_max_cm >= 0),
  amt_lower_depth_cm DECIMAL(6, 2) CHECK (amt_lower_depth_cm > 0),
  amt_lower_depth_med_cm DECIMAL(6, 2) CHECK (amt_lower_depth_med_cm > 0),
  amt_lower_depth_min_cm DECIMAL(6, 2) CHECK (amt_lower_depth_min_cm > 0),
  amt_lower_depth_max_cm DECIMAL(6, 2) CHECK (amt_lower_depth_max_cm > 0),
  catu_boundary_shape VARCHAR REFERENCES boundary_shapes(catu_boundary_shape),
  amt_boundary_cm DECIMAL(6, 2) CHECK (amt_boundary_cm >= 0),
  cato_boundary_width VARCHAR REFERENCES boundary_widths(cato_boundary_width),
  cato_soil_moisture VARCHAR REFERENCES soil_moistures(cato_soil_moisture),
  catu_parent_material_origin VARCHAR REFERENCES nzsc_pmo(catu_pmo),
  catu_anthropic_origin_modifier VARCHAR REFERENCES nzsc_pmo_mod(catu_pmo_mod),
  cato_horizon_weathering VARCHAR REFERENCES weathering(cato_weathering),
  );

```

## Horizon architecture

```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS structure_types (
  id_structure INTEGER PRIMARY KEY,
  catu_structure VARCHAR UNIQUE,
  txt_structure_name VARCHAR,
  txt_structure_desc VARCHAR
  );
  
/* Table 13.1 */
INSERT INTO structure_types VALUES
  (1, 'P', 'Pedogenic', 'Structural units meet the definition of natural soil peds and occur largely within the solum'),
  (2, 'G', 'Geogenic', 'Structural units are inherited from parent materials that have undergone limited weathering e.g. bedding planes, and occur largely below the solum'),
  (3, 'A', 'Anthrogenic', 'Structural units have been induced by human activity, usually within the solum and most commonly in surface horizons'),
  (4, 'U', 'Unknown', 'Type of structural development could not be determined with confidence');

CREATE TABLE IF NOT EXISTS structure_grades (
  id_structure_grade INTEGER PRIMARY KEY,
  cato_structure_grade VARCHAR UNIQUE,
  txt_structure_grade_name VARCHAR,
  txt_structure_grade_desc VARCHAR
  );
  
/* Table 13.2 */
INSERT INTO structure_grades VALUES
  (1, 'G', 'Single grain', 'Material is structureless and incoherent, with more than 85% by weight of discrete primary particles ranging in size from sand to very coarse gravel.'),
  (2, 'V', 'Massive', 'Material is structureless but coherent, with no fissures at spacings of less than 200 mm'),
  (3, 'W', 'Weak', 'Material where 15-25% of the material comprises coherent structural units'),
  (4, 'M', 'Moderate', 'Material where 25-75% of the material comprises coherent structural units'),
  (5, 'S', 'Strong', 'Material where >75% of the material comprises coherent structural units');

CREATE TABLE IF NOT EXISTS structure_sizes_rapid (
  id_structure_size_rapid INTEGER PRIMARY KEY,
  cato_structure_size_rapid VARCHAR UNIQUE,
  txt_structure_size_rapid_name VARCHAR,
  txt_structure_size_rapid_desc VARCHAR
  );  

/* Section 13.1.4 and part Table 20.15 */
INSERT INTO structure_sizes_rapid VALUES
  (1, 'C', 'Coarse', 'At least 50% peds of size > 20 mm (‘coarse’), or apedal massive structure'),
  (2, 'F', 'Fine', 'At least 50% peds of size < 20 mm (‘coarse’), including horizons where coarse structure breaks to finer nested peds');

CREATE TABLE IF NOT EXISTS structure_shapes (
  id_structure_shape INTEGER PRIMARY KEY,
  catu_structure_shape VARCHAR UNIQUE,
  txt_structure_shape_name VARCHAR
  ); 

/* Table 13.3 */
INSERT INTO structure_shapes VALUES
(1, 'AB', 'Angular blocky'),
(2, 'BL', 'Blocky'),
(3, 'PH', 'Polyhedral'),
(4, 'SR', 'Spheroidal'),
(5, 'LT', 'Lenticular'),
(6, 'PM', 'Prismatic'),
(7, 'CO', 'Columnar'),
(8, 'PL', 'Platy'),
(9, 'LF', 'Lentiform'),
(10, 'WL', 'Wedge-like');

CREATE TABLE IF NOT EXISTS root_positions (
  id_root_pos INTEGER PRIMARY KEY,
  catu_root_pos VARCHAR UNIQUE,
  txt_root_pos_name VARCHAR,
  txt_root_pos_desc VARCHAR
  ); 

/* Table 13.13 */
INSERT INTO root_positions VALUES
   (1, 'W',     'Within', 'Roots are primarily located within peds.'),
   (2, 'B',    'Between', 'Roots are primarily located between peds, within fissures or along bedding planes'),
   (3, 'T', 'Throughout', 'Roots are spread throughout the soil mass.'),
   (4, 'U',    'Unknown', 'Sampling method did not allow reliable observation.');

```

```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS horizon_arch (
  id_site VARCHAR,
  id_horizon INTEGER,
  FOREIGN KEY (id_site, id_horizon) REFERENCES horizon(id_site, id_horizon),
  PRIMARY KEY (id_site, id_horizon),
  catu_structure_type VARCHAR REFERENCES structure_types(catu_structure),
  cato_structure_grade VARCHAR REFERENCES structure_grades(cato_structure_grade),
  catu_structure_shape VARCHAR REFERENCES structure_shapes(catu_structure_shape),
  cato_structure_size VARCHAR REFERENCES structure_sizes_rapid(cato_structure_size_rapid),
  amt_total_frags_p DECIMAL(6, 2) CHECK (amt_total_frags_p BETWEEN 0 and 100),
  amt_otherfrags_p DECIMAL(6, 2) CHECK (amt_otherfrags_p BETWEEN 0 and 100),
  amt_artefacts_p DECIMAL(6, 2) CHECK (amt_artefacts_p BETWEEN 0 and 100),
  amt_total_roots_p DECIMAL(6, 2) CHECK (amt_total_roots_p BETWEEN 0 and 100),
  catu_total_roots_pos VARCHAR REFERENCES root_positions(catu_root_pos),
  amt_total_voids_p DECIMAL(6, 2) CHECK (amt_total_voids_p BETWEEN 0 and 100),
  amt_total_pores_p DECIMAL(6, 2) CHECK (amt_total_pores_p BETWEEN 0 and 100),
  amt_macropores_p DECIMAL(6, 2) CHECK (amt_macropores_p BETWEEN 0 and 100),
  amt_micropores_p DECIMAL(6, 2) CHECK (amt_micropores_p BETWEEN 0 and 100)
  );

```

### Structure

```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS horizon_structures (
  id_site VARCHAR,
  id_horizon INTEGER,
  FOREIGN KEY (id_site, id_horizon) REFERENCES horizon(id_site, id_horizon),
  id_structure INTEGER,
  PRIMARY KEY (id_site, id_horizon, id_structure),
  catu_structure_type VARCHAR REFERENCES structure_types(catu_structure),
  cato_structure_grade VARCHAR REFERENCES structure_grades(cato_structure_grade),
  catu_structure_shape VARCHAR REFERENCES structure_shapes(catu_structure_shape),
  amt_structure_size_med_mm DECIMAL(6, 2) CHECK (amt_structure_size_med_mm > 0),
  amt_structure_size_min_mm DECIMAL(6, 2) CHECK (amt_structure_size_min_mm > 0),
  amt_structure_size_max_mm DECIMAL(6, 2) CHECK (amt_structure_size_max_mm > 0)
  );

```

### Rock fragments

```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS fragment_sizes_simple (
  id_fragment_size INTEGER PRIMARY KEY,
  cato_fragment_size VARCHAR UNIQUE,
  txt_fragment_size_name VARCHAR,
  txt_fragment_size_desc VARCHAR
  );
  
/* Table 13.4 */
INSERT INTO fragment_sizes_simple VALUES
  (1, 'S', 'Small',   '2 - 60 mm'),
  (2, 'M', 'Medium', '60 - 200 mm'),
  (3, 'L', 'Large', '> 200 mm');

CREATE TABLE IF NOT EXISTS rock_fragment_shapes (
  id_rockfrag_shape INTEGER PRIMARY KEY,
  catu_rockfrag_shape VARCHAR UNIQUE,
  txt_rockfrag_shape_name VARCHAR,
  txt_rockfrag_shape_desc VARCHAR
  );

/* Table 13.5 */
INSERT INTO rock_fragment_shapes VALUES
  (1, 'R', 'Rounded',   'Rock fragments considerably smoothed by transport processes'),
  (2, 'A', 'Angular', 'Rock fragments with little smoothing by transport processes'),
  (3, 'M', 'Mixed', 'Both rounded and angular fragments mixed together');
  
CREATE TABLE IF NOT EXISTS nzsc_lithologies (
  id_nzsc_lithology INTEGER PRIMARY KEY,
  catu_nzsc_lithology VARCHAR UNIQUE,
  txt_nzsc_lithology_name VARCHAR
  );

/* Table 24.2 */
INSERT INTO nzsc_lithologies VALUES
    (1, 'Cb', 'Carbonaceous Rock (Coal)'),
    (2, 'Sq', 'Soft Quartzitic Sediments'),
    (3, 'Hq', 'Hard Quartzitic Sediments'),
    (4, 'Sm', 'Soft mudstone'),
    (5, 'Ss', 'Soft sandstone'),
    (6, 'Hm', 'Hard mudstone'),
    (7, 'Hs', 'Hard sandstone'),
    (8, 'Tm', 'Tuffaceous mudstone'),
    (9, 'Ts', 'Tuffaceous sandstone'),
    (10, 'Sc', 'Schist'),
    (11, 'Ls', 'Soft calcareous'),
    (12, 'Li', 'Hard calcareous'),
    (13, 'Ma', 'Marble'),
    (14, 'Rh', 'Rhyolite'),
    (15, 'Ig', 'Ignimbrite'),
    (16, 'An', 'Andesite'),
    (17, 'Ba', 'Basalt'),
    (18, 'Gr', 'Granite and Gneiss'),
    (19, 'Di', 'Diorite'),
    (20, 'Ga', 'Gabbro'),
    (21, 'Fe', 'Iron Sands');
      

```

```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS horizon_rock_fragments (
  id_site VARCHAR,
  id_horizon INTEGER,
  FOREIGN KEY (id_site, id_horizon) REFERENCES horizon(id_site, id_horizon),
  id_rock_fragment INTEGER,
  PRIMARY KEY (id_site, id_horizon, id_rock_fragment),
  cato_rock_fragment_size VARCHAR REFERENCES fragment_sizes_simple(cato_fragment_size),
  catu_rock_fragment_shape VARCHAR REFERENCES rock_fragment_shapes(catu_rockfrag_shape),
  amt_rock_fragment_p DECIMAL(6, 2) CHECK (amt_rock_fragment_p BETWEEN 0 and 100),
  catu_rock_fragment_lithology VARCHAR REFERENCES nzsc_lithologies(catu_nzsc_lithology),
  );

```

### Other fragments

```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS other_fragment_types (
  id_other_fragment INTEGER PRIMARY KEY,
  catu_other_fragment VARCHAR UNIQUE,
  txt_other_fragment_name VARCHAR,
  txt_other_fragment_desc VARCHAR
  );
  
/* Table 13.6 */
INSERT INTO other_fragment_types VALUES
   (1, 'S', 'Shell',    'Seashells or chitinous material'),
   (2, 'B', 'Bone',     'Skeletal fragments'),
   (3, 'T', 'Timber',   'Dead wood from trees and shrubs, coarse roots'),
   (4, 'C', 'Charcoal', 'Burnt organic materials'),
   (5, 'G', 'Gum',      'Kauri gum');

```


```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS horizon_other_fragments (
  id_site VARCHAR,
  id_horizon INTEGER,
  FOREIGN KEY (id_site, id_horizon) REFERENCES horizon(id_site, id_horizon),
  id_other_fragment INTEGER,
  PRIMARY KEY (id_site, id_horizon, id_other_fragment),
  cato_other_fragment_size VARCHAR REFERENCES fragment_sizes_simple(cato_fragment_size),
  catu_other_fragment VARCHAR REFERENCES other_fragment_types(catu_other_fragment),
  amt_other_fragment_p DECIMAL(6, 2) CHECK (amt_other_fragment_p BETWEEN 0 and 100)
  );

```

### Artefacts

```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS artefact_types (
  id_artefact INTEGER PRIMARY KEY,
  catu_artefact VARCHAR UNIQUE,
  txt_artefact_name VARCHAR,
  txt_artefact_desc VARCHAR
  );
  
/* Table 13.7 */
INSERT INTO artefact_types VALUES
  (1,  'As', 'Asphalt',  'Asphalt and other bitumen-containing materials'),
  (2,  'Br', 'Brick',    'Fired clay building materials, usually unglazed'),
  (3,  'Cr', 'Ceramic',  'Fired clay objects, usually glazed'),
  (4,  'Ce', 'Concrete', 'Concrete materials, cements'),
  (5,  'Gl', 'Glass',    'Fragments from windows, containers, etc'),
  (6,  'Pl', 'Plastics', 'Artificial polymers (non-textile)'),
  (7,  'Tn', 'Textiles - natural', 'Fabrics and carpets made from e.g. wool'),
  (8,  'Tx', 'Textiles - artificial', 'Fabrics derived from or dominated by plastics'),
  (9,  'Mt', 'Metals', 'Refined ore products'),
  (10, 'Ms', 'Mine Spoil', 'Materials leftover from ore processing activities'),
  (11, 'Ws', 'Wastes', 'Other domestic or commercial rubbish');

```

```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS horizon_artefacts (
  id_site VARCHAR,
  id_horizon INTEGER,
  FOREIGN KEY (id_site, id_horizon) REFERENCES horizon(id_site, id_horizon),
  id_artefact INTEGER,
  PRIMARY KEY (id_site, id_horizon, id_artefact),
  cato_artefact_size VARCHAR REFERENCES fragment_sizes_simple(cato_fragment_size),
  catu_artefact VARCHAR REFERENCES artefact_types(catu_artefact),
  amt_artefact_p DECIMAL(6, 2) CHECK (amt_artefact_p BETWEEN 0 and 100)
  );

```

### Plastics

```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS plastic_types (
  id_plastic INTEGER PRIMARY KEY,
  catu_plastic VARCHAR UNIQUE,
  txt_plastic_name VARCHAR,
  txt_plastic_desc VARCHAR
  );

/* Table 13.8 */
INSERT INTO plastic_types VALUES
  (1, 'N', 'Not verifiable', 'Designation not possible / uncertain'),
  (2, 'C', 'Consumer', 'Consumer-products (everyday-products) like PET-bottles, SUP bags, packages, signs etc.'),  
  (3, 'A', 'Agricultural', 'Agricultural products like mulch film, silage film, straw bale nets, tire wear etc.'),
  (4, 'I', 'Industrial', 'Industrial products like broken pieces of industrial equipment, industrial waste'),
  (5, 'B', 'Construction', 'All plastic materials which were placed in soil for construction and supply purposes (e.g., power cables, geomembranes)');
  
CREATE TABLE IF NOT EXISTS plastic_fixations (
  id_plastic_fixation INTEGER PRIMARY KEY,
  cato_plastic_fixation VARCHAR UNIQUE,
  txt_plastic_fixation_name VARCHAR,
  txt_plastic_fixation_desc VARCHAR
  );
  
/* Table 13.9 */
INSERT INTO plastic_fixations VALUES
  (1, 'NF', 'None',    'Plastic pieces are not included in soil aggregates (no soil aggregates or loose plastic)'),
  (2, 'SF', 'Solely',   'Single plastic pieces are in cooperated into soil aggregates, but others are loose'),
  (3, 'MF', 'Moderate', 'The majority of plastic pieces is in cooperated into soil aggregates, but single are loose'),
  (4, 'CF', 'Complete', 'All plastic pieces are in cooperated into soil aggregates');

CREATE TABLE IF NOT EXISTS plastic_shapes (
  id_plastic_shape INTEGER PRIMARY KEY,
  catu_plastic_shape VARCHAR UNIQUE,
  txt_plastic_shape_name VARCHAR,
  txt_plastic_shape_desc VARCHAR
  );

/* Table 13.10 */
INSERT INTO plastic_shapes VALUES
 (1, 'P', 'Preserved', 'The original manufactured shape of the object is recognisable'),
 (2, 'B', 'Broken',  'The fragment is recognisable as having been part of a larger object'),
 (3, 'F', 'Flat', 'Tabular or sheet-like'),
 (4, 'A', 'Angular', 'Sharp-edged'),
 (5, 'R', 'Rounded', 'Has edges that are not sharp'),
 (6, 'S', 'Spherical', 'Ball shaped or ovoid');

CREATE TABLE IF NOT EXISTS plastic_degradations (
  id_plastic_degradation INTEGER PRIMARY KEY,
  catu_plastic_degradation VARCHAR UNIQUE,
  txt_plastic_degradation_name VARCHAR,
  txt_plastic_degradation_desc VARCHAR
  );
  
/* Table 13.11 */
INSERT INTO plastic_degradations VALUES
  (1, 'N', 'Not verifiable', 'Designation not possible / uncertain'),
  (2, 'F', 'Fresh', 'Fresh plastic pieces with bright colours, unaffected shape, without signs of deterioration (cracks, broken edges, rough surfaces)'), 
  (3, 'I', 'Incipient alteration', 'Plastic pieces with incipient deterioration surface such as first cracks, broken edges or roughened/grooved surfaces'),
  (4, 'D', 'Degraded', 'Plastic pieces with clear indications of ageing such as pale colours or yellowing (UV light), strong fragmentation, frayed edges'),
  (5, 'S', 'Strongly degraded', 'Plastic pieces with strong degraded surfaces, faded colours, soft surface, frayed areas or edges');

```


```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS horizon_plastics (
  id_site VARCHAR,
  id_horizon INTEGER,
  FOREIGN KEY (id_site, id_horizon) REFERENCES horizon(id_site, id_horizon),
  id_plastic INTEGER,
  PRIMARY KEY (id_site, id_horizon, id_plastic),
  catu_plastic VARCHAR REFERENCES plastic_types(catu_plastic),
  cato_plastic_fixation VARCHAR REFERENCES plastic_fixations(cato_plastic_fixation),
  catu_plastic_shape VARCHAR REFERENCES plastic_shapes(catu_plastic_shape),
  catu_plastic_degradation VARCHAR REFERENCES plastic_degradations(catu_plastic_degradation),
  amt_plastic_p DECIMAL(6, 2) CHECK (amt_plastic_p BETWEEN 0 and 100)
  );

```

### Roots

```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS root_sizes_simple (
  id_root_size INTEGER PRIMARY KEY,
  cato_root_size VARCHAR UNIQUE,
  txt_root_size_name VARCHAR,
  txt_root_size_desc VARCHAR
  );

/* Table 13.12 */
INSERT INTO root_sizes_simple VALUES
  (1, 'F',   'Fine',         '< 2 mm'),
  (2, 'M', 'Medium',      '2 - 10 mm'),
  (3, 'C', 'Coarse',        '> 10 mm');
  
```

```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS horizon_roots (
  id_site VARCHAR,
  id_horizon INTEGER,
  FOREIGN KEY (id_site, id_horizon) REFERENCES horizon(id_site, id_horizon),
  id_root INTEGER,
  PRIMARY KEY (id_site, id_horizon, id_root),
  catu_plastic VARCHAR REFERENCES plastic_types(catu_plastic),
  cato_root_size VARCHAR REFERENCES root_sizes_simple(cato_root_size),
  cato_root_pos VARCHAR REFERENCES root_positions(catu_root_pos),
  amt_root_p DECIMAL(6, 2) CHECK (amt_root_p BETWEEN 0 and 100),
  );

```

### Voids

```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS void_types (
  id_void INTEGER PRIMARY KEY,
  catu_void VARCHAR UNIQUE,
  txt_void_name VARCHAR,
  txt_void_desc VARCHAR
  );

/* Table 13.14 */
INSERT INTO void_types VALUES
  (1, 'BP', 'Bedding plane', 'A parting or discontinuity due to stratification during deposition of sedimentary particles.'), 
  (2, 'CH', 'Channel', 'Tubular void of biological origin that is less than 20 mm in diameter (e.g. insect burrow)'),
  (3, 'TU', 'Tunnel',  'Tubular void of biological origin that is 20 mm or more in diameter (e.g. rabbit burrow) '),
  (4, 'FS', 'Fissure', 'Planar void with a width much smaller than length and depth. Fissures represent the release of strain caused by drying and usually bound individual structural units and form repetitively.'),
  (5, 'IT', 'Interstitial', 'Irregular voids occupying space between aggregates that do not fit together');


CREATE TABLE IF NOT EXISTS void_conns (
  id_void_conn INTEGER PRIMARY KEY,
  cato_void_conn VARCHAR UNIQUE,
  txt_void_conn_name VARCHAR,
  txt_void_conn_desc VARCHAR
  );
  
/* Table 13.15 */
INSERT INTO void_conns VALUES
  (1, 'I', 'Isolated', 'Voids are not connected to each other, and may only reach up to the soil surface'),
  (2, 'P', 'Partly connected', 'Voids are sometimes connected to each other within the horizon, or continue into neighbouring horizons'),
  (3, 'C', 'Continuous',  'Void spaces are well connected and form a continuous network');
  
```

```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS horizon_voids (
  id_site VARCHAR,
  id_horizon INTEGER,
  FOREIGN KEY (id_site, id_horizon) REFERENCES horizon(id_site, id_horizon),
  id_void INTEGER,
  PRIMARY KEY (id_site, id_horizon, id_void),
  catu_void VARCHAR REFERENCES void_types(catu_void),
  cato_void_conn VARCHAR REFERENCES void_conns(cato_void_conn),
  amt_void_p DECIMAL(6, 2) CHECK (amt_void_p BETWEEN 0 and 100),
  );

```

## Horizon colour

```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS munsell_colours (
  id_munsell INTEGER PRIMARY KEY,
  cato_munsell VARCHAR UNIQUE,
  txt_colour_hex VARCHAR
  );

/* Per charts - just a few for demo */
INSERT INTO munsell_colours VALUES
  (1, '10YR 5/4', '#947650'),
  (2, '7.5YR 3/2', '#584537'),
  (3, '5R 3/8', '#822930'),
  (4, 'N 4/0', '#616161');
  
CREATE TABLE IF NOT EXISTS short_colours (
  id_colour INTEGER PRIMARY KEY,
  catu_colour VARCHAR UNIQUE,
  txt_colour_name VARCHAR,
  txt_colour_desc VARCHAR
  );

/* Table 14.2 */
INSERT INTO short_colours VALUES
  (1, 'R', 'Red', '2.5YR or redder, with value < 7 and chroma > 2'),
  (2, 'O', 'Orange', '5YR or 7.5YR, with value < 7 and chroma > 2'),
  (3, 'B', 'Brown', '7.5YR or 10YR, with value > 4 and chroma > 2'),
  (4, 'Y', 'Yellow', '2.5Y or 5Y, with value > 4 and chroma > 2'),
  (5, 'G', 'Grey', 'Any non-gley hue, value 4--7, chroma 1'),
  (6, 'D', 'Dark', 'Any non-gley hue, values ≤ 3 and chromas ≤ 2'),
  (7, 'P', 'Pale', 'Any non-gley hue, values ≥ 7 and chromas ≤ 2'),
  (8, 'L', 'Gley', 'Gley charts');
  
CREATE TABLE IF NOT EXISTS colour_moistures (
  id_colour_moisture INTEGER PRIMARY KEY,
  cato_colour_moisture VARCHAR UNIQUE,
  txt_colour_moisture_name VARCHAR
  );
  
INSERT INTO colour_moistures VALUES
  (1, 'M', 'Moist'),
  (2, 'D', 'Dry');
  
CREATE TABLE IF NOT EXISTS pattern_types (
  id_pattern INTEGER PRIMARY KEY,
  catu_pattern VARCHAR UNIQUE,
  txt_pattern_name VARCHAR,
  txt_pattern_desc VARCHAR
  );
 
/* Table 14.3 */
INSERT INTO pattern_types VALUES
  (1, 'M', 'Mottles', 'Colour patterns induced by redox processes'),
  (2, 'R', 'Reticulate', 'Colour patterns induced by preferential flow (e.g. gammate patterns in pallic soils)'),
  (3, 'W', 'Weathering', 'Colour patterns induced by parent material weathering, most commonly seen in BC horizons and below (e.g. rock ghost patterns)'),
  (4, 'X', 'Mixing', 'Colour patterns created by biological (e.g. worm tunnels) or mechanical (e.g. landslide) means');

CREATE TABLE IF NOT EXISTS pattern_shapes (
  id_pattern_shape INTEGER PRIMARY KEY,
  catu_pattern_shape VARCHAR UNIQUE,
  txt_pattern_shape_name VARCHAR,
  txt_pattern_shape_desc VARCHAR
  );
 
/* Table 14.4 */
INSERT INTO pattern_shapes VALUES
  (1, 'B', 'Blotches', 'Rounded shapes, blobs, where colour patterns penetrate the soil mass'),
  (2, 'S', 'Stripes', 'Linear colour patterns e.g. root linings'),
  (3, 'C', 'Coatings', 'Patterns caused by ped surface features e.g. cutans');
  
CREATE TABLE IF NOT EXISTS pattern_contrasts (
  id_pattern_contrast INTEGER PRIMARY KEY,
  catu_pattern_contrast VARCHAR UNIQUE,
  txt_pattern_contrast_name VARCHAR,
  txt_pattern_contrast_desc VARCHAR
  );
 
/* Table 14.5 */
INSERT INTO pattern_contrasts VALUES
  (1, 'F', 'Faint', 'Indistinct colour variation evident only on close examination'),
  (2, 'D', 'Distinct', 'Although not striking, the colour variation is readily seen'),
  (3, 'P', 'Prominent', 'The colour variation is conspicuous');
  
CREATE TABLE IF NOT EXISTS pattern_edges (
  id_pattern_edge INTEGER PRIMARY KEY,
  catu_pattern_edge VARCHAR UNIQUE,
  txt_pattern_edge_name VARCHAR,
  txt_pattern_edge_desc VARCHAR
  );
 
/* Table 14.6 */
INSERT INTO pattern_edges VALUES 
  (1, 'S', 'Sharp', 'Knife-edge boundaries between colours'),
  (2, 'C', 'Clear', 'Colour transition < 2 mm wide'),
  (3, 'D', 'Diffuse', 'Colour transition > 2 mm wide');

```  
  

```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS horizon_matrix_colours (
  id_site VARCHAR,
  id_horizon INTEGER,
  FOREIGN KEY (id_site, id_horizon) REFERENCES horizon(id_site, id_horizon),
  id_colour_matrix INTEGER,
  PRIMARY KEY (id_site, id_horizon, id_colour_matrix),
  cato_matrix_munsell VARCHAR REFERENCES munsell_colours(cato_munsell),
  catu_colour_moisture VARCHAR REFERENCES munsell_colours(cato_munsell)
  );

CREATE TABLE IF NOT EXISTS horizon_colour_patterns (
  id_site VARCHAR,
  id_horizon INTEGER,
  FOREIGN KEY (id_site, id_horizon) REFERENCES horizon(id_site, id_horizon),
  id_colour_pattern INTEGER,
  PRIMARY KEY (id_site, id_horizon, id_colour_pattern),
  cato_pattern_munsell VARCHAR REFERENCES munsell_colours(cato_munsell),
  catu_pattern_short_colour VARCHAR REFERENCES short_colours(catu_colour),
  catu_pattern_type VARCHAR REFERENCES pattern_types(catu_pattern),
  amt_pattern_p DECIMAL(6, 2) CHECK (amt_pattern_p BETWEEN 0 AND 100),
  catu_pattern_shape VARCHAR REFERENCES pattern_shapes(catu_pattern_shape),
  amt_pattern_size_mm DECIMAL(6, 2) CHECK (amt_pattern_p > 0),
  cato_pattern_contrast VARCHAR REFERENCES pattern_contrasts(catu_pattern_contrast),
  cato_pattern_edge VARCHAR REFERENCES pattern_edges(catu_pattern_edge)
  );

```
  
## Horizon texture

```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS simple_textures (
  id_simple_texture INTEGER PRIMARY KEY,
  cato_simple_texture VARCHAR UNIQUE,
  txt_simple_texture_name VARCHAR,
  txt_simple_texture_desc VARCHAR
  );

/* Table 15.3 */
INSERT INTO simple_textures VALUES
 (1, 'C', 'Clayey', 'Clay content ≥ 35%, texture class C, LC or ZC'),
 (2, 'Z', 'Silty', 'Clay content < 35%, silt content ≥ 40%; texture class Z, LZ, ZL'),
 (3, 'L', 'Loamy', 'Clay content 8 - 35%, silt content < 40%; texture class SL, SC, CL'),
 (4, 'S', 'Sandy', 'Clay content < 8, silt content, < 40%, texture class S, LS'),
 (5, 'R', 'Rocky', 'Fine earth fraction < 15%, dominated by rock fragments > 2 mm');

CREATE TABLE IF NOT EXISTS mineral_textures (
  id_mineral_texture INTEGER PRIMARY KEY,
  cato_mineral_texture VARCHAR UNIQUE,
  txt_mineral_texture_name VARCHAR
  );

/* Table 15.2 */
INSERT INTO mineral_textures VALUES
(1, 'S', 'Sand'),
(2, 'LS', 'Loamy Sand'),
(3, 'SL', 'Sandy Loam'),
(4, 'LZ', 'Loamy Silt'),
(5, 'Z', 'Silt'),
(6, 'SC', 'Sandy Clay Loam'),
(7, 'CL', 'Clay Loam'),
(8, 'ZL', 'Silt Loam'),
(9, 'LC', 'Loamy Clay'),
(10, 'AC', 'Silty Clay'),
(11, 'C', 'Clay');

CREATE TABLE IF NOT EXISTS sand_sizes (
  id_sand_size INTEGER PRIMARY KEY,
  cato_sand_size VARCHAR UNIQUE,
  txt_sand_size_name VARCHAR,
  txt_sand_size_desc VARCHAR
  );
  
/* Table 15.4 */
INSERT INTO sand_sizes VALUES
  (1, 'K', 'Coarse', 'Sand is dominantly 2.0 - 0.6 mm'),
  (2, 'M', 'Medium', 'Sand is dominantly 0.6 - 0.2 mm'),
  (3, 'F', 'Fine',   'Sand is dominantly 0.2 - 0.06 mm');
  
CREATE TABLE IF NOT EXISTS organic_levels (
  id_organic INTEGER PRIMARY KEY,
  cato_organic VARCHAR UNIQUE,
  txt_organic_name VARCHAR,
  txt_organic_desc VARCHAR
  );
  
/* Table 15.5 */
INSERT INTO organic_levels VALUES  
   (1, 'T', 'Slightly organic', '17-30% organic matter'),
   (2, 'P', 'Moderately organic', '30-50% organic matter');
   
CREATE TABLE IF NOT EXISTS organic_types (
  id_organic_type INTEGER PRIMARY KEY,
  cato_organic_type VARCHAR UNIQUE,
  txt_organic_type_name VARCHAR,
  txt_organic_type_desc VARCHAR
  );
  
/* Table 15.6 */
INSERT INTO organic_types VALUES  
  (1, 'M', 'Moss', 'Organic materials dominantly derived from moss and/or herb species e.g. *Sphagnum spp.*'),
  (2, 'R', 'Reed', 'Organic materials dominantly derived from grasses, reeds, flaxes or similar e.g. *Phormium spp.*'),
  (3, 'T', 'Tree', 'Organic materials dominantly derived from woody shrubs and trees, e.g. Kānuka'),
  (4, 'U', 'Unknown', 'Origin of organic materials cannot be identified with confidence');

CREATE TABLE IF NOT EXISTS organic_decomps (
  id_organic_decomp INTEGER PRIMARY KEY,
  cato_organic_decomp VARCHAR UNIQUE,
  txt_organic_decomp_name VARCHAR,
  txt_organic_decomp_desc VARCHAR
  );

/* Table 15.7 */
INSERT INTO organic_decomps VALUES 
 (1, 'F', 'Fibric', 'Organic matter weakly decomposed and dominated by visible plant remains'),
 (2, 'M', 'Mesic', 'Organic matter moderately decomposed, some visible plant structures but mostly amorphous'),
 (3, 'H', 'Humic', 'Organic matter no longer identifiable, minimal fibre content');

CREATE TABLE IF NOT EXISTS nzsc_mineralogies (
  id_nzsc_mineralogy INTEGER PRIMARY KEY,
  catu_nzsc_mineralogy VARCHAR UNIQUE,
  txt_nzsc_mineralogy_name VARCHAR,
  txt_nzsc_mineralogy_desc VARCHAR
  );

/* Table 5.2 */
INSERT INTO nzsc_mineralogies VALUES
  (1, 'Gy', 'Gypsic', '>15% by weight of gypsum in the < 20 mm fraction'),
  (2, 'Ca', 'Carbonatic', '>30% by weight carbonates in the < 20 mm fraction'),
  (3, 'Sf', 'Superferritic', '> 28% citrate-dithionite extractable Fe in the < 2 mm fraction'),
  (4, 'Fe', 'Ferritic', '> 7.0% citrate-dithionite extractable Fe in the < 2 mm fraction'),
  (5, 'Al', 'Aluminitic', '> 40% by weight aluminium hydroxides and oxyhydroxides in the < 2 mm fraction'),
  (6, 'Si', 'Siliceous', '> 90% by weight silica minerals (quartz, chalcedony, or opal) and other durable minerals that are resistant to weathering, provided that the silica minerals are > 60% by weight in the < 2 mm fraction'),
  (7, 'Am', 'Amorphous', '> 5% by weight of minerals with short-range order (principally allophane, imogolite, and ferrihydrite) in the < 2 mm fraction'),
  (8, 'Mi', 'Micaceous', '> 40% by weight of mica minerals in the < 2 mm fraction'),
  (9, 'Cl', 'Chloritic', '> 40% by weight of chlorite in the < 2 mm fraction'),
  (10, 'Sp', 'Serpentinitic', '> 40% by weight of serpentine minerals (antigorite, chrysotile, fibrolite, and talc) in the < 2 mm fraction'),
  (11, 'Sm', 'Smectitic', 'More smectites than any other mineral group or single mineral (if mineral group not applicable, e.g. crandallite, chlorite in the < 0.002 mm fraction'),
  (12, 'Vm', 'Vermiculitic', 'More vermiculites than any other mineral group or single mineral in the < 0.002 mm fraction'),
  (13, 'Il', 'Illitic', 'More illites than any other mineral group or single mineral in the < 0.002 mm fraction'),
  (14, 'Ka', 'Kandic', '> 50% by weight Kaolin-group minerals (kaolinite, halloysite, dickite, and nacrite) *and* < 10% by weight smectites in the < 0.002 mm fraction'),
  (15, 'Cm', 'Clay-mineralic', 'Other soils with > 10% clay. The dominant mineral or mineral group in the clay fraction is named (e.g. clay-mineralic (crandallite)) in the < 0.002 mm fraction'),
  (16, 'Gl', 'Glassy', '> 40% by weight volcanic glass in the < 2 mm fraction'),
  (17, 'Wh', 'Whole-soil-mineralic', '> 40% by weight of any mineral or mineral group, other than silica minerals or feldspars in the < 2 mm fraction'),
  (18, 'Ot', 'Other soils', '');

```


```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS horizon_texture (
  id_site VARCHAR,
  id_horizon INTEGER,
  FOREIGN KEY (id_site, id_horizon) REFERENCES horizon(id_site, id_horizon),
  PRIMARY KEY (id_site, id_horizon),
  cato_texture_simple VARCHAR REFERENCES simple_textures(cato_simple_texture),
  cato_texture VARCHAR REFERENCES mineral_textures(cato_mineral_texture),
  cato_texture_sandmod VARCHAR REFERENCES sand_sizes(cato_sand_size),
  cato_texture_orgmod VARCHAR REFERENCES organic_levels(cato_organic),
  cato_organic_type VARCHAR REFERENCES organic_types(cato_organic_type),
  catu_organic_decomp VARCHAR REFERENCES organic_decomps(cato_organic_decomp),
  catu_organic_minmod VARCHAR REFERENCES simple_textures(cato_simple_texture),
  amt_sand_est_med_p DECIMAL (6, 2) CHECK (amt_sand_est_med_p BETWEEN 0 AND 100),
  amt_sand_est_min_p DECIMAL (6, 2) CHECK (amt_sand_est_min_p BETWEEN 0 AND 100),
  amt_sand_est_max_p DECIMAL (6, 2) CHECK (amt_sand_est_max_p BETWEEN 0 AND 100),
  amt_clay_est_med_p DECIMAL (6, 2) CHECK (amt_clay_est_med_p BETWEEN 0 AND 100),
  amt_clay_est_min_p DECIMAL (6, 2) CHECK (amt_clay_est_min_p BETWEEN 0 AND 100),
  amt_clay_est_max_p DECIMAL (6, 2) CHECK (amt_clay_est_max_p BETWEEN 0 AND 100),
  catu_lithology VARCHAR REFERENCES nzsc_lithologies(catu_nzsc_lithology),
  catu_mineralogy VARCHAR REFERENCES nzsc_mineralogies(catu_nzsc_mineralogy)
  );
  
```

## Horizon secondary features

```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS concentration_forms (
  id_conc_form INTEGER PRIMARY KEY,
  cato_conc_form VARCHAR UNIQUE,
  txt_conc_form_name VARCHAR,
  txt_conc_form_desc VARCHAR
  );

/* Table 16.1 */
INSERT INTO concentration_forms VALUES
  (1, 'CC', 'Concretion', 'hard concentrations with a layered internal structure, usually rounded'),
  (2, 'NO', 'Nodule', 'hard concentrations with no internal structure, usually irregular'),
  (3, 'CT', 'Crystal', 'A mineral arranged as interlocking or twinned macroscopic crystals or as a single macroscopic crystal, e.g., gypsum.'),
  (4, 'SS', 'Soft masses', 'A non-cemented concentration that can seldom be removed from the soil as a discrete unit');
  
CREATE TABLE IF NOT EXISTS concentration_types (
  id_conc INTEGER PRIMARY KEY,
  cato_conc VARCHAR UNIQUE,
  txt_conc_name VARCHAR,
  txt_conc_desc VARCHAR
  );

/* Table 16.2 */
INSERT INTO concentration_types VALUES
   (1,  'E',  'Earthy', 'Loamy or silty texture within a sandy or clayey matrix'),
   (2,  'A',  'Argillaceous', 'Clayey texture within a lower-clay matrix'),
   (3,  'F',  'Ferruginious', 'Iron-dominated'),
   (4,  'M',  'Manganiferous', 'Manganese-dominated'),
   (5,  'N',  'Ferromanganiferous', 'Dominated by a mix of iron and manganese'),
   (6,  'K',  'Calcareous', 'Dominated by calcium carbonate (CaCO3)'),
   (7,  'Y',  'Gypseous', 'Dominated by calcium sulfate (gypsum, CaSO4)'),
   (8,  'Z',  'Salty', 'Dominated by salts more soluble than Calcium carbonate or calcium sulfate'),
   (9,  'S',  'Sulfurous', 'Dominated by sulfur, e.g. jarosite in acid sulfate soils'),
   (10, 'O',  'Organic', 'Organic texture in a low-organics matrix'),
   (11, 'UK', 'Unknown', 'Composition cannot be reliably determined');

CREATE TABLE IF NOT EXISTS coating_types (
  id_coating INTEGER PRIMARY KEY,
  catu_coating VARCHAR UNIQUE,
  txt_coating_name VARCHAR,
  txt_coating_desc VARCHAR
  );

/* Table 16.3 */
INSERT INTO coating_types VALUES 
   (1, 'CC', 'Clay coats', 'Appear to have more clay than the soil matrix. They are often different in colour from the adjacent matrix and are usually recognisable in sandy or loamy soils, but can be difficult to recognise in clayey soils.'),
   (2, 'ZC', 'Silt coats', 'Silt grains concentrated at surfaces; they may be residual concentrations resulting from clay removal, or may have moved in from horizons above'),
   (3, 'SC', 'Sand coats', 'Sand grains concentrated at surfaces; they may be residual concentrations resulting from silt and/or clay removal, or may have moved in from horizons above'),
   (4, 'OG', 'Organic coats', 'Surface features that have a moist colour value of 4 or less and are rich in organic matter compared to the interior of the solid.'),
   (5, 'SQ', 'Sesquioxide coats', 'Films of sesquioxides on interfaces or impregnating interfaces. They vary in colour depending on the composition and degree of oxidation and hydration. They are difficult to identify chemically, and the different kinds cannot normally be distinguished in the field. Ferri-manganiferous coats, however, are normally very dark brown or black and effervesce vigorously with hydrogen peroxide'),
   (6, 'MN', 'Manganese coats', 'Dark coatings of precipitated manganese oxides, reactive to H2O2.'),
   (7, 'CB', 'Carbonate coats', 'Precipitated calcium carbonate (CaCO3). Usually pale-coloured, and reactive to HCl.'),
   (8, 'SI', 'Silica coats', 'Precipitated silica (SiO2). Usually pale-coloured, and non-reactive to HCl.');

CREATE TABLE IF NOT EXISTS pan_types (
  id_pan INTEGER PRIMARY KEY,
  catu_pan VARCHAR UNIQUE,
  txt_pan_name VARCHAR,
  txt_pan_desc VARCHAR
  );
  
/* Table 16.4 */
INSERT INTO pan_types VALUES   
   (1, 'C', 'Cultivation pan', 'Pan comprising compressed soil, induced by cultivation (e.g. use of heavy farm machinery)'),
   (2, 'D', 'Densipan', 'Silty layers with a very high bulk density and extremely slow permeability'),
   (3, 'H', 'Humus-pan', 'Cemented by aluminium and organic matter. Common in Podzols; sometimes known as coffee rock'),
   (4, 'F', 'Iron pan', 'Interlocking nodules of Fe(/Mn) precipitates (bog iron), often at a texture contrast boundary'),
   (5, 'K', 'Calcareous pan', 'Created by the precipitation of calcium carbonate (CaCO~3~)'),
   (6, 'O', 'Ortstein pan', 'Pan cemented by iron and organic matter. Common in Podzols'),
   (7, 'P', 'Placic', 'A very thin (< 10 mm), dark, iron-dominated pan with sharp boundaries'),
   (8, 'Q', 'Silica pan', 'Created by the precipitation of silica (SiO~2~)'),
   (9, 'X', 'Fragipan', 'An earthy, high density, erosion-resistant layer common to Pallic soils'),
   (10, 'UK', 'Unknown', 'Pan origin cannot be clearly determined');
   
CREATE TABLE IF NOT EXISTS pan_continuities (
  id_pan_cont INTEGER PRIMARY KEY,
  catu_pan_cont VARCHAR UNIQUE,
  txt_pan_cont_name VARCHAR,
  txt_pan_cont_desc VARCHAR
  );

/* Table 16.5 */
INSERT INTO pan_continuities VALUES 
 (1, 'C', 'Continuous', 'Extends as a layer with little or no break across 1 m or more.'),
 (2, 'D', 'Discontinuous', 'Broken by cracks but original orientation of fragments is preserved.'),
 (3, 'B', 'Broken', 'Broken by cracks and fragments are disoriented');

CREATE TABLE IF NOT EXISTS pan_structures (
  id_pan_structure INTEGER PRIMARY KEY,
  catu_pan_structure VARCHAR UNIQUE,
  txt_pan_structure_name VARCHAR,
  txt_pan_structure_desc VARCHAR
  );

/* Table 16.6 */
INSERT INTO pan_structures VALUES 
  (1, 'V', 'Massive', 'No recognisable structure'),
  (2, 'S', 'Vesicular', 'Sponge-like structure having large pores, which may or may not be filled with softer material'),
  (3, 'C', 'Concretionary', 'Spheroidal concretions cemented together'),
  (4, 'N', 'Nodular', 'Irregular nodules cemented together'),
  (5, 'P', 'Platy', 'Plate-like units cemented together');

CREATE TABLE IF NOT EXISTS stress_types (
  id_stress INTEGER PRIMARY KEY,
  catu_stress VARCHAR UNIQUE,
  txt_stress_name VARCHAR,
  txt_stress_desc VARCHAR
  );

/* Table 16.7 */
INSERT INTO stress_types VALUES 
 (1, 'SL', 'Slickensides', 'Smooth faces with linear grooves, from peds sliding past each other.'),
 (2, 'PF', 'Pressure faces', 'Smooth planar faces from peds pressing against each other without sliding.');

CREATE TABLE IF NOT EXISTS bio_feature_types (
  id_bio_feature INTEGER PRIMARY KEY,
  catu_bio_feature VARCHAR UNIQUE,
  txt_bio_feature_name VARCHAR,
  txt_bio_feature_desc VARCHAR
  );

/* Table 16.8 */
INSERT INTO bio_feature_types VALUES 
   (1, 'T', 'Tunnel', 'Infilled earthworm or insect burrow, < 20 mm in diameter'),
   (2, 'B', 'Burrow', 'Infilled former macrofauna burrow, > 20 mm in diameter'),
   (3, 'C', 'Casts',  'Earthworm wastes forming balls of fine soil material');

```


```{sql}
--| connection: con

CREATE TABLE IF NOT EXISTS horizon_secondary_features (
  id_site VARCHAR,
  id_horizon INTEGER,
  FOREIGN KEY (id_site, id_horizon) REFERENCES horizon(id_site, id_horizon),
  PRIMARY KEY (id_site, id_horizon),
  catu_concentration_form VARCHAR REFERENCES concentration_forms(cato_conc_form),
  amt_concentration_p DECIMAL (6, 2) CHECK (amt_concentration_p BETWEEN 0 AND 100),
  catu_pan_type VARCHAR REFERENCES pan_types(catu_pan),
  cato_pan_continuity VARCHAR REFERENCES pan_continuities(catu_pan_cont),
  catu_pan_structure VARCHAR REFERENCES pan_structures(catu_pan_structure),
  catu_stress_type VARCHAR REFERENCES stress_types(catu_stress),
  amt_stress_p DECIMAL (6, 2) CHECK (amt_stress_p BETWEEN 0 AND 100)
  );
  
CREATE TABLE IF NOT EXISTS horizon_concentrations (
  id_site VARCHAR,
  id_horizon INTEGER,
  FOREIGN KEY (id_site, id_horizon) REFERENCES horizon(id_site, id_horizon),
  id_concentration INTEGER,
  PRIMARY KEY (id_site, id_horizon, id_concentration),
  catu_concentration_form VARCHAR REFERENCES concentration_forms(cato_conc_form),
  catu_concentration_type VARCHAR REFERENCES concentration_types(cato_conc),
  amt_concentration_size_med_mm DECIMAL (6, 2) CHECK (amt_concentration_size_med_mm > 0),
  amt_concentration_size_min_mm DECIMAL (6, 2) CHECK (amt_concentration_size_min_mm > 0),
  amt_concentration_size_max_mm DECIMAL (6, 2) CHECK (amt_concentration_size_max_mm > 0),
  amt_concentration_med_p DECIMAL (6, 2) CHECK (amt_concentration_med_p BETWEEN 0 AND 100),
  amt_concentration_min_p DECIMAL (6, 2) CHECK (amt_concentration_min_p BETWEEN 0 AND 100),
  amt_concentration_max_p DECIMAL (6, 2) CHECK (amt_concentration_max_p BETWEEN 0 AND 100)
  );

CREATE TABLE IF NOT EXISTS horizon_coatings (
  id_site VARCHAR,
  id_horizon INTEGER,
  FOREIGN KEY (id_site, id_horizon) REFERENCES horizon(id_site, id_horizon),
  id_coating INTEGER,
  PRIMARY KEY (id_site, id_horizon, id_coating),
  catu_coating VARCHAR REFERENCES coating_types(catu_coating),
  amt_coating_p DECIMAL (6, 2) CHECK (amt_coating_p BETWEEN 0 AND 100)
  );
  
CREATE TABLE IF NOT EXISTS horizon_bio_features (
  id_site VARCHAR,
  id_horizon INTEGER,
  FOREIGN KEY (id_site, id_horizon) REFERENCES horizon(id_site, id_horizon),
  id_bio_features INTEGER,
  PRIMARY KEY (id_site, id_horizon, id_bio_features),
  catu_bio_feature VARCHAR REFERENCES bio_feature_types(catu_bio_feature),
  amt_bio_feature_p DECIMAL (6, 2) CHECK (amt_bio_feature_p BETWEEN 0 AND 100)
  );
  
```

